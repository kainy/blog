<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Freetao&#39;s Blog</title>
  <subtitle>关♥生活，关注互联网。</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://github.kainy.cn/blog/"/>
  <updated>2017-03-14T09:37:28.774Z</updated>
  <id>http://github.kainy.cn/blog/</id>
  
  <author>
    <name>Kainy Guo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小程序自定义分析功能（上）</title>
    <link href="http://github.kainy.cn/blog/2017/02/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E6%9E%90%E5%8A%9F%E8%83%BD/"/>
    <id>http://github.kainy.cn/blog/2017/02/小程序数据自定义分析功能/</id>
    <published>2017-02-10T07:33:16.000Z</published>
    <updated>2017-03-14T09:37:28.774Z</updated>
    
    <content type="html"><![CDATA[<p>目前为止，小程序后台的 “数据分析” 模块由 “实时统计” 和” 访问分析” 两部分组成，主要根据页面和时长两个维度来观察小程序受访情况，如详情页访问次数、时长、分享次数等等。但由于用户实际交互的小程序界面，由页面（page）和数据（appData）两部分组合而成，想要完成完整的用户行为分析，如访问者的地域、年龄、性别分布如何？不同用户群感兴趣的内容有何差异？具体到某一篇游记的浏览量如何？从浏览到分享的转化率如何？这些目标通过目前已有的标准统计是无法达到的。而自定义分析的推出恰恰解决了这些痛点。</p><h2 id="自定义分析功能牛逼之处"><a href="#自定义分析功能牛逼之处" class="headerlink" title="自定义分析功能牛逼之处"></a>自定义分析功能牛逼之处</h2><p>官方对自定义分析的描述是：</p><p>“自定义分析支持灵活多维和近实时的用户行为分析，可以通过自定义上报，对用户在小程序内的行为做精细化跟踪，满足页面访问等标准统计以外的个性化分析需求”</p><a id="more"></a><p>总结一句话就是更灵活、更精细化用来满足个性化分析需求的数据分析工具。既然是数据分析，就少不了配置上报，收集数据的步骤，不然哪来的数据供后续分析呢？与以往的 Webtrends、Google Analytics、百度统计… 的事件分析要求引入一个脚本，然后在页面中加入标记（埋点）的做法不同，这里采用一种无入侵的方式：只需在公众平台一处进行配置，而无需修改程序代码。比如点击事件，只需在事件配置页提供点击元素的 class（或ID）选择器即可。这种将修改统计配置，与代码逻辑解耦的好处是，市场／运营人员更改统计规则无需等待发版的时间窗口，而开发人员也不再抱怨代码里散落的埋点信息影响阅读、甚至编程逻辑。</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>“纸上得来” 不如 “举个栗子”，这里以自己目前在运营的一个旅行日记小程序《跨时空》为例。前段时间在详情页加了个”回到首页”的小 icon ，想要提高通过分享链接进入详情页用户的留存率（由于小程序目前没有提供全局导航菜单，如果没有这个 icon，这部分用户浏览完页面就只能退出《跨时空》流失了），现在根据进入详情页（依据路径“／pages／trip／trip”和 编码或标题确定）的用户数和点击 icon（类名为”.home-nav”的按钮）次数统计即可，配置截图：</p><p><img src="http://wx1.sinaimg.cn/mw690/4d6e3e3bgy1fcnrz0kxs6j21hs11mjve.jpg" alt="小程序自定义分析功能-click事件配置"></p><p><img src="http://wx2.sinaimg.cn/mw690/4d6e3e3bgy1fcnrz0pitzj21hg0ts0uy.jpg" alt="小程序自定义分析功能-配置的测试"></p><p>另外对于营销活动，我们可能会关注具体某个活动（page+id）的分享情况，而不是整体（page）分享情况，通过原有的“访问页面”统计，我们只能看到页面整体的分享人／次数据：</p><p><img src="http://wx1.sinaimg.cn/mw690/4d6e3e3bgy1fcnrz3mwtnj20o10chgmp.jpg" alt="小程序数据统计-访问页面"></p><p>而自定义分析，则可以实现具体到某篇游记的统计，配置截图：</p><p><img src="http://wx1.sinaimg.cn/mw690/4d6e3e3bgy1fcns4h547wj21hc16yaf2.jpg" alt="小程序自定义分析功能-share事件配置"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>由于还在内测阶段，文档更新还稍有滞后，如trigger（触发条件）的含义说明，目前还漏了 pageLoad 和 pageUnload 对于非小程序开发者而言可能还无法区分和 engerPage／leavePage 之间的差异。</p><p><img src="http://wx1.sinaimg.cn/mw690/4d6e3e3bgy1fcnrz39c04j216k0n841g.jpg" alt="小程序自定义分析功能文档"></p><p>但无论如何，个人认为自定义统计的上线，无疑是小程序发展历程中的重要一步。</p><p>由于刚完成事件发布步骤，还需要等待数据收集才能实践事件分析功能，统计和分析部分的内测评论将在下一篇进行分享，敬请期待。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前为止，小程序后台的 “数据分析” 模块由 “实时统计” 和” 访问分析” 两部分组成，主要根据页面和时长两个维度来观察小程序受访情况，如详情页访问次数、时长、分享次数等等。但由于用户实际交互的小程序界面，由页面（page）和数据（appData）两部分组合而成，想要完成完整的用户行为分析，如访问者的地域、年龄、性别分布如何？不同用户群感兴趣的内容有何差异？具体到某一篇游记的浏览量如何？从浏览到分享的转化率如何？这些目标通过目前已有的标准统计是无法达到的。而自定义分析的推出恰恰解决了这些痛点。&lt;/p&gt;&lt;h2 id=&quot;自定义分析功能牛逼之处&quot;&gt;&lt;a href=&quot;#自定义分析功能牛逼之处&quot; class=&quot;headerlink&quot; title=&quot;自定义分析功能牛逼之处&quot;&gt;&lt;/a&gt;自定义分析功能牛逼之处&lt;/h2&gt;&lt;p&gt;官方对自定义分析的描述是：&lt;/p&gt;&lt;p&gt;“自定义分析支持灵活多维和近实时的用户行为分析，可以通过自定义上报，对用户在小程序内的行为做精细化跟踪，满足页面访问等标准统计以外的个性化分析需求”&lt;/p&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="分析" scheme="http://github.kainy.cn/blog/tags/%E5%88%86%E6%9E%90/"/>
    
      <category term="微信" scheme="http://github.kainy.cn/blog/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="小程序" scheme="http://github.kainy.cn/blog/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="数据" scheme="http://github.kainy.cn/blog/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="运营" scheme="http://github.kainy.cn/blog/tags/%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>《跨时空》旅行日记小程序</title>
    <link href="http://github.kainy.cn/blog/2017/01/%E3%80%8A%E8%B7%A8%E6%97%B6%E7%A9%BA%E3%80%8B%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://github.kainy.cn/blog/2017/01/《跨时空》旅行日记小程序/</id>
    <published>2017-01-08T07:33:16.000Z</published>
    <updated>2017-03-14T09:37:28.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>我喜欢旅行，在正文开始前，先向有共同兴趣的朋友推荐一个自己每次出行前必装的 APP —— 面包旅行。我主要用它来做旅行日志，每天行程结束，我都会将当天拍的照片上传并做简单的文字记录，记录是回顾一天行程的最好方式，也方便日后回忆。由于面包旅行的旅行日记基于旅行爱好者分享（UGC），相对比较纯粹，我平时还会在上面浏览旅记，常常能在不经意间找到打动自己的图片或文字。</p><a id="more"></a><h2 id="小程序由来"><a href="#小程序由来" class="headerlink" title="小程序由来"></a>小程序由来</h2><p>但后来发现，APP 的记录和浏览两部分功能，应用场景分别是旅行中和非旅行中。而对于和我一样的大多数普通人，大部分时间并不是在旅途中，而是在工作、生活里。也就是说，这个 APP 我同一时间点几乎只会用到一半的功能。于是我就在想会不会有一天官方把两部分功能独立成两个 APP ，但这件事至今没有发生。小程序的出现让我想起了这个心结，“一个小程序只做一件事”、”无需安装，用完即走“的理念不正是为此量身定制么？大部分时间里我想要的无非是在排队或等车的碎片时间里，翻翻旅记消遣和排解一下，不需要消息推送的打扰，也不想一遍遍重复 APP loading 界面。</p><p>开发过程似乎并不艰辛（毕竟“我是我的产品经理”的感觉和面对工作任务完全是两码事），倒是多次审核被拒有些失落，从审核之严亦可见微信对小程序期望之高，不过这对于用户而言其实是好事。开发和审核展开说的话篇幅较大，后续可能单独拎出来说，这里主要介绍“跨时空”小程序的几个功能界面。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><h3 id="首页：旅记推荐"><a href="#首页：旅记推荐" class="headerlink" title="首页：旅记推荐"></a>首页：旅记推荐</h3><p>首页是“推荐”旅记，从面包旅行随机拉取质量较高的旅行日记列表。适合漫无目的的浏览。每个 banner 背景图是旅记封面，还包含的标题、访次、作者昵称等基本信息；</p><p><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fkrykdj20ku112e81.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fkrykdj20ku112e81.jpg" style="width:17rem" alt="跨时空小程序-首页"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fmsr4rj20ku112b1c.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fmsr4rj20ku112b1c.jpg" style="width:17rem" alt="跨时空小程序-旅记详情页"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fo0r7gj20ku112tu3.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fo0r7gj20ku112tu3.jpg" style="width:17rem" alt="跨时空小程序-卡片页"></a></p><p>点击查看旅记详情页，一篇旅记是由许多照片+配文的卡片所组成，标题边上是作者头像，点击可以进入个人主页。点击卡片则查看卡片的互动情况，类似朋友圈的点赞和评价数。</p><p>推荐模块的信息结构是：旅记列表 - 旅记 - 卡片</p><h3 id="发现：旅行地点分类"><a href="#发现：旅行地点分类" class="headerlink" title="发现：旅行地点分类"></a>发现：旅行地点分类</h3><p>首页底部第二个导航“发现”，这里按照地域和主题分类的旅行目的地列表。如果你对某个地点的旅记感兴趣，这里会是不错的去处。</p><p><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fqe3orj20ku112e81.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fqe3orj20ku112e81.jpg" style="width:17rem" alt="跨时空小程序-‘发现’导航"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fshn4fj20ku112hdt.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fshn4fj20ku112hdt.jpg" style="width:17rem" alt="跨时空小程序-‘目的地’列表"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fuuuwbj20ku112npd.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fuuuwbj20ku112npd.jpg" style="width:17rem" alt="跨时空小程序-‘精品游记’列表"></a></p><p>点击方块进入”热门地点”，地点详情页还未完成，所以目前还只能查看到”旅行地点”列表。和“精品游记”列表中的旅记，这里和首页类似，只不过所有游记都是在指定旅行目的地发生的。</p><p>”发现”模块的信息结构：目的地列表 - 热门地点/旅行地点分类/精品游记</p><h3 id="我的：个人中心"><a href="#我的：个人中心" class="headerlink" title="我的：个人中心"></a>我的：个人中心</h3><p>以及第三个导航“我的”：这部分是最晚开发的，目前做了个任务列表，微信登陆后可保存和同步任务信息。</p><p><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj8blcr23j20ku112hdt.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj8blcr23j20ku112hdt.jpg" style="width:17rem" alt="跨时空小程序-个人主页"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4flhistj20ku112k7u.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4flhistj20ku112k7u.jpg" style="width:17rem" alt="跨时空小程序-旅记详情页"></a><br><a href="http://ww4.sinaimg.cn/large/4d6e3e3bgw1fbj4fv6832j20jy0zk41o.jpg" target="_blank" rel="external"><br><img src="http://ww4.sinaimg.cn/mw690/4d6e3e3bgw1fbj4fv6832j20jy0zk41o.jpg" style="width:17rem" alt="跨时空小程序-分享消息"></a></p><p>如果遇到喜欢的内容，还可以分享到聊天会话中，召唤小伙伴一起欣赏。如截图所示，目前小程序分享内容时会自动截取当前页面，作为分享链接的封面，这样接收到分享的人就可以很直观的了解到你所希望传递的信息啦。</p><h2 id="广召天下英雄"><a href="#广召天下英雄" class="headerlink" title="广召天下英雄"></a>广召天下英雄</h2><p>正如你所看到，目前“跨时空”还有许多待完善的细节和功能点。要知道目前实现的，还只是本人作为一名开发者所能想到的，而内容展现亦非小程序大施拳脚之地，结合小程序提供的 LBS 、线下扫码能力，将有无限可能待你我发掘。所以借此发个英雄贴【请谅解一名开发者的狗（kai）粮（yuan）情节 —— 觉的自己做的狗粮好吃，就一定要向全世界宣布制作方法】</p><p>对“跨时空”小程序感兴趣也希望一同改进的朋友：如果你有想法又懂编码，欢迎 <a href="https://github.com/FJUT/weapp-demo-breadtrip/fork" target="_blank" rel="external">fork</a> 和提 PR；对于有想法但不会编程的可以把想法和意见提到 <a href="https://github.com/FJUT/weapp-demo-breadtrip/issues" target="_blank" rel="external">issue</a>；对于纯粹热爱旅行、喜欢小程序的朋友，如果你认可我们所做的努力和付出，请点击右上角菜单按钮，将喜欢的旅记／卡片分享到志趣相投的微信群／好友 😁</p><p><img src="http://ww1.sinaimg.cn/large/4d6e3e3bgw1fbj9yz04isj209k0awdfw.jpg" alt="小程序二维码：请使用手机摄像头扫码"></p><p>洞天之外，你会发现原来别人是这样玩儿的。最后来扯扯“跨时空”名字的由来，其实还受近期看的两部电影《奇异博士》和《你的名字》启发，意在让小程序成为连接你与旅行者之间的结绳。透过图文，能够产生共鸣的地方，才是你真正向往旅行的地方。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题外话&quot;&gt;&lt;a href=&quot;#题外话&quot; class=&quot;headerlink&quot; title=&quot;题外话&quot;&gt;&lt;/a&gt;题外话&lt;/h2&gt;&lt;p&gt;我喜欢旅行，在正文开始前，先向有共同兴趣的朋友推荐一个自己每次出行前必装的 APP —— 面包旅行。我主要用它来做旅行日志，每天行程结束，我都会将当天拍的照片上传并做简单的文字记录，记录是回顾一天行程的最好方式，也方便日后回忆。由于面包旅行的旅行日记基于旅行爱好者分享（UGC），相对比较纯粹，我平时还会在上面浏览旅记，常常能在不经意间找到打动自己的图片或文字。&lt;/p&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="开发" scheme="http://github.kainy.cn/blog/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="微信" scheme="http://github.kainy.cn/blog/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="小程序" scheme="http://github.kainy.cn/blog/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 项目持续集成实践</title>
    <link href="http://github.kainy.cn/blog/2016/12/%E9%A1%B9%E7%9B%AE%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%AE%9E%E8%B7%B5/"/>
    <id>http://github.kainy.cn/blog/2016/12/项目持续集成实践/</id>
    <published>2016-12-15T22:15:55.000Z</published>
    <updated>2017-03-14T09:37:28.794Z</updated>
    
    <content type="html"><![CDATA[<p>前端开发流程（ 语法检查、编译、重载）的自动化我们在工作中已经用得比较溜了，这篇文章主要介绍 Node.js 应用部署到服务端过程（编译、测试）的自动化。</p><p>这里以开源的 API Mock 系统 AMP 的部署为例（ <a href="https://iffe.leanapp.cn" target="_blank" rel="external">https://iffe.leanapp.cn</a> ），通过这套系统提供的 mock 服务，前端可以在接口定义完毕后就着手开发，与后端接口开发并行以提升项目整体效率。接口支持 CORS 跨域访问、支持 HTTPS 访问，为前端开发，尤其是移动端开发带来便利。<br><a id="more"></a></p><h2 id="实现的效果"><a href="#实现的效果" class="headerlink" title="实现的效果"></a>实现的效果</h2><p>本地开发代码，提交到 gitlab 的 master 分支后自动测试和编译，并将编译结果提交到可部署生产的 built 分支，需要的时候一键发布生产。</p><h2 id="实现细节"><a href="#实现细节" class="headerlink" title="实现细节"></a>实现细节</h2><p>这里用到 gitlab.com 提供的私有代码托管和 git-ci 服务，以及 leancloud 的云引擎。gitlab.com 提供的服务可以使用自己搭建的 gitlab 替换。提供与 leancloud 类似云引擎功能的网站，市面上也不少，这里因为其免费策略合理所以采用，拿它们举例适用性较广。</p><p>首先我们要在项目根目录添加 <code>gitlab-ci.yml</code> 文件，用于描述持续集成的过程，分三个阶段：</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>只需要执行 Node.js 应用的测试命令: <code>npm test</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">test:</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">test</span></div></pre></td></tr></table></figure><h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><p>执行 Node.js 应用的构建命令: <code>npm run build</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">build:</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></div></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">.</span> <span class="string">deploy.sh</span> <span class="comment"># 为了方便脚本执行上下文控制，我们将命令写到 deploy.sh 中</span></div></pre></td></tr></table></figure><p><code>deploy.sh</code> 脚本完成两件事：</p><ol><li>执行编译命令</li><li>push 编译代码到 built 分支</li></ol><p>完整配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># .gitlab-ci.yml</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">image:</span> <span class="attr">node:6</span></div><div class="line"></div><div class="line"><span class="comment"># 缓存安装后的 node_modules ，以加速下次构建</span></div><div class="line"><span class="attr">cache:</span></div><div class="line"><span class="attr">  paths:</span> </div><div class="line"><span class="bullet">    -</span> <span class="string">node_modules/</span></div><div class="line"></div><div class="line"><span class="attr">before_script:</span></div><div class="line"><span class="bullet">  -</span> <span class="string">npm</span> <span class="string">i</span> <span class="bullet">-D</span>    <span class="comment"># 所有任务执行前都会执行该脚本，用于安装所有依赖包 </span></div><div class="line"></div><div class="line"><span class="comment"># 添加 ‘build' 任务，描述构建任务的执行</span></div><div class="line"><span class="attr">build:</span></div><div class="line"><span class="attr">  stage:</span> <span class="string">build</span>        <span class="comment"># 定义所属阶段</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span>   <span class="comment"># 需要运行的脚本</span></div><div class="line"><span class="attr">  only:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">build</span>           <span class="comment"># 'build' 任务仅影响 'build' 分支</span></div><div class="line"></div><div class="line"><span class="comment"># 添加 'test' 任务， 描述测试任务的执行</span></div><div class="line"><span class="attr">test:</span></div><div class="line"><span class="attr">  stage:</span> <span class="string">test</span>         <span class="comment"># 定义所属阶段</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">test</span>    <span class="comment"># 需要运行的脚本</span></div><div class="line"><span class="attr">  except:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">master</span>          <span class="comment"># 'test' 任务影响除 'master' 分支之外的所有分支</span></div><div class="line"></div><div class="line"><span class="comment"># 添加 'deploy' 任务， 完成构建和部署</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></div><div class="line"><span class="attr">  script:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">.</span> <span class="string">deploy.sh</span>     <span class="comment"># 需要运行的脚本</span></div><div class="line"><span class="attr">  only:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">master</span>          <span class="comment"># 'deploy' 任务仅影响 'master' 分支</span></div></pre></td></tr></table></figure><p>由于测试任务由除 master 之外的分支的 push 触发，而部署任务完成后，将编译结果 push 到 built 分支。所以我们 push 到 master 后，会先执行部署任务，部署任务完成后，执行测试任务（如下图）</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasnuyxbxij21do0myq8j.jpg" alt="push 操作触发部署、测试任务"></p><p>任务执行结果：</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasnv43a3rj21dy0n6grg.jpg" alt="执行结果"></p><p>有了构建好的代码，就可以部署到 leancloud 了，部署前我们需要告诉 leancloud 代码库地址，并将 <code>deploy key</code> 信息保存到 gitlab 的项目配置中。这样以后 leancloud 就可以凭 <code>deploy key</code> 向 gitlab 库拉取代码。</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasnvfto9rj21d00sc7bq.jpg" alt="在 leancloud 上的“常规设置“中填写代码库地址，并获取 `deploy key`"></p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasnv6vy7fj20ug0nk0yb.jpg" alt="在 gitlab 上项目的“Deploy Keys“中填写上一步获取的 `deploy key`"></p><p>两边信息配置完毕，就可以开始部署，在“部署”面版填写“分支或版本号“为 built 即可。</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasnupddu7j20mu0oujuq.jpg" alt="在 leancloud 云引擎中选择 built 分支部署"></p><p>如果一切顺利，部署成功后就可以访问应用了。</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fasog9t4wxj21eu0z2qgs.jpg" alt="部署完成访问应用"></p><p><em>（请注意：<a href="https://iffe.leanapp.cn" target="_blank" rel="external">演示系统</a>虽然功能 ok，但是运行环境为 leancloud 免费版云引擎，配额受限，请 <strong>不要</strong> 在实际项目中使用， 请使用大师在内网环境部署的。）</em></p><h2 id="解决工作中场景中哪些痛点"><a href="#解决工作中场景中哪些痛点" class="headerlink" title="解决工作中场景中哪些痛点"></a>解决工作中场景中哪些痛点</h2><ol><li><p>无缝版本切换，实现“为跑道上飞驰的赛车更换零件”——在 leancloud 部署应用到生产环境的过程中发现一个有意思的细节，就是新版本构建出问题并不影响线上服务。大致过程类似于在一台新服务器上运行好版本代码，然后把流量从上运行上一版本代码的服务器切过来，在此之前会检测配置的端口是否正常相应请求，如果不是就终止切换，并提示发版失败，发版成功则把“旧版服务器”做存档，以供后续版本回退。有了这一机制，发版本就可以选择最适合业务的时机，而不是非要等到用户量最低的时候，“他好我也好” 😝</p></li><li><p>提前暴露编译配置的问题，实际项目中更改生产构建配置，往往改完当时验证没问题后就不太会留意，而等到真正发版前的一段时间项目文件变动可能产生预料外的问题，这时发现再解决就占用了本已紧张的发版时间，而且需要定位产生问题的代码，这问题在多人协作以及长周期的版本尤其突出。而引入持续集成后，每次 push 将会触发测试环节，在这里加上构建测试，通过测试结果即可及时发现问题并处理。</p></li><li><p>提升开发体验，将一部分消耗资源、重复的、机械性的任务如全量编译，交由持续集成服务器完成，以节约开发机资源，让开发者专注于开发而不受打断。能有空伸个懒腰，发发呆不再是奢求。</p></li></ol><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>探索“云计算”、”微服务”这些新热技术在前端开发领域的应用场景，对理解“小而美”产品（快速迭代、小步快跑的同时保持新集成特性的稳定输出）存在的基础（支撑点），有推导和借鉴意义。</p><p>短期内切换应用部署方案显然并不现实，但这并不构成拒绝拥抱变化的充分条件，毕竟技术的发展不因主观意愿而转移，而去中心化和原子化（把功能和服务内聚为模块）显然是日益突显的两个特征。实际上下半年组内在一些项目中切换 git 做版本管理，并将暴露的问题解决得七七八八已是一个不错的开端。</p><hr><p>“ 我觉得套路和扯皮救不了中（cheng）国（xu）人（yuan），但技术储备可以 ”</p><p><img src="https://ww1.sinaimg.cn/large/4d6e3e3bgw1fb1vq7qshuj218c18gwlb.jpg" alt="我没说过这句话——鲁迅">。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端开发流程（ 语法检查、编译、重载）的自动化我们在工作中已经用得比较溜了，这篇文章主要介绍 Node.js 应用部署到服务端过程（编译、测试）的自动化。&lt;/p&gt;&lt;p&gt;这里以开源的 API Mock 系统 AMP 的部署为例（ &lt;a href=&quot;https://iffe.leanapp.cn&quot;&gt;https://iffe.leanapp.cn&lt;/a&gt; ），通过这套系统提供的 mock 服务，前端可以在接口定义完毕后就着手开发，与后端接口开发并行以提升项目整体效率。接口支持 CORS 跨域访问、支持 HTTPS 访问，为前端开发，尤其是移动端开发带来便利。&lt;br&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="持续集成" scheme="http://github.kainy.cn/blog/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
      <category term="实践" scheme="http://github.kainy.cn/blog/tags/%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="Node.js" scheme="http://github.kainy.cn/blog/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>ATS ( App Transport Security )是什么，以及如何支持 ATS</title>
    <link href="http://github.kainy.cn/blog/2016/12/ATS%20(%20App%20Transport%20Security%20)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E6%94%AF%E6%8C%81%20ATS/"/>
    <id>http://github.kainy.cn/blog/2016/12/ATS ( App Transport Security )是什么，以及如何支持 ATS/</id>
    <published>2016-12-12T18:21:12.000Z</published>
    <updated>2017-03-14T09:37:28.762Z</updated>
    
    <content type="html"><![CDATA[<p>今天明秋童鞋在需求文档中看到接入任意门需要满足 ATS 标准，我们就来了解了下什么是 ATS ；该标准对 web 开发的影响，及应对措施。</p><h2 id="什么是-ATS"><a href="#什么是-ATS" class="headerlink" title="什么是 ATS"></a>什么是 ATS</h2><p>App Transport Security，简称 ATS，是苹果为了提高 App 与服务器之间数据安全，而在 iOS 9 当中首次推出的一项安全特性。在苹果全球开发者大会（WWDC）的一场演示中，该公司公布了一个最后期限——2017 年 1 月 1 日——即 App Store 当中的所有应用必须在这个日期之前启用这一重要安全功能。</p><a id="more"></a><p><img src="http://ww2.sinaimg.cn/large/4d6e3e3bgw1faowh7bp4bj20s40f8dmb.jpg" alt="昨晚收到的新浪微博开放平台“催命邮件”"></p><p>距离最后期限越来越近，于是开发者们又将收到一波升级需求,不升级的后果图片里面说得比较清楚了。对应工作中的场景，就是版本因达不到接入标准而延期，这时候就不是走个特批就能解决的问题了，因为后面还有一道 App Store 上架的外部审核，要是卡在这里后果就是 App 无法如期上架，全员落水，运营和 iOS 开发哥哥提前表示 “这锅咱不背不背不背啊😭…”</p><p>所以今后如果不幸因 ATS 被“不达标”了，表觉得是 someone 有意怼你，应该明白这背后是一家伟大公司为了保护用户数据安全而做的充满情怀和正义感的事情，嗯 (认真脸)。</p><h2 id="ATS-的硬性指标："><a href="#ATS-的硬性指标：" class="headerlink" title="ATS 的硬性指标："></a>ATS 的硬性指标：</h2><ol><li>强制使用 https</li><li>证书域名和链接地址域名匹配</li><li>根证书受苹果信任</li><li>证书在有效期内</li><li>必须支持 TLS1.2</li><li>至少 RSA 2048位或者是 ECC 256位密钥加密</li><li>SHA256 算法证书</li><li>加密套件要求，必须使用 AES-128 或者 AES-256 支持，并且支持完整前向加密：</li></ol><p>RSA 算法要求使用以下加密套件：</p><blockquote><p>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384<br>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256<br>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384<br>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256<br>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</p></blockquote><p>DSA 算法要求使用以下加密套件：</p><blockquote><p>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384<br>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256<br>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384<br>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA<br>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256<br>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</p></blockquote><p>总结下就是：<strong>必须使用 https 协议；证书有效且强度足够</strong>。</p><h2 id="如何支持-ATS-标准"><a href="#如何支持-ATS-标准" class="headerlink" title="如何支持 ATS 标准"></a>如何支持 ATS 标准</h2><ol><li><p>强度足够的证书好解决，购买苹果信任CA所颁发的证书即可，一般知名的商业证书颁发机构如 GoDaddy 、 VeriSign …</p></li><li><p>然后就是部署 https 的 web 服务，这里以常见的 Nginx、Apache 以及 Tomcat 为参考：</p></li></ol><ul><li><p>2.1 Apache：（Apache，Nginx 要求关联的 openssl 版本在 1.0.1+ ，这样网站才支持 TLS1.2）</p><figure class="highlight apacheconf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">SSLProtocol</span>  <span class="literal">all</span> -SSLv2 -SSLv3</div><div class="line"><span class="attribute">SSLCipherSuite</span> ECDH:AESGCM:HIGH:!RC4:!DH:!MD5:!aNULL:!eNULL;</div></pre></td></tr></table></figure></li><li><p>2.2 Nginx</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>; </div><div class="line"><span class="attribute">ssl_ciphers</span> ECDH:AESGCM:HIGH:!RC4:!DH:!MD5:!aNULL:!eNULL;</div></pre></td></tr></table></figure></li><li><p>2.3 Tomcat 要求环境 tomcat7+ 和 JDK1.7+ ，配置参考如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"443"</span> <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11Protocol"</span></span></div><div class="line">              <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">keystoreFile</span>=<span class="string">"keystore/domain.jks"</span>  <span class="attr">keystorePass</span>=<span class="string">"证书密码"</span></div><div class="line">              <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span></div><div class="line">              <span class="attr">ciphers</span>=<span class="string">"TLS_RSA_WITH_AES_128_GCM_SHA256,</span></div><div class="line">                        TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,</div><div class="line">                        TLS_RSA_WITH_AES_128_CBC_SHA,</div><div class="line">                        TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,</div><div class="line">                        TLS_RSA_WITH_AES_128_CBC_SHA256,</div><div class="line">                        TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,</div><div class="line">                        SSL_RSA_WITH_3DES_EDE_CBC_SHA,</div><div class="line">                        TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA" /&gt;</div></pre></td></tr></table></figure></li></ul><p>看到这里，你是不是该撸起袖子做些什么，或把本文转给需要它的运维童鞋们 ヽ(；▽；)ノ＼(^-^ ) 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天明秋童鞋在需求文档中看到接入任意门需要满足 ATS 标准，我们就来了解了下什么是 ATS ；该标准对 web 开发的影响，及应对措施。&lt;/p&gt;&lt;h2 id=&quot;什么是-ATS&quot;&gt;&lt;a href=&quot;#什么是-ATS&quot; class=&quot;headerlink&quot; title=&quot;什么是 ATS&quot;&gt;&lt;/a&gt;什么是 ATS&lt;/h2&gt;&lt;p&gt;App Transport Security，简称 ATS，是苹果为了提高 App 与服务器之间数据安全，而在 iOS 9 当中首次推出的一项安全特性。在苹果全球开发者大会（WWDC）的一场演示中，该公司公布了一个最后期限——2017 年 1 月 1 日——即 App Store 当中的所有应用必须在这个日期之前启用这一重要安全功能。&lt;/p&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>小程序金融保险行业应用交流</title>
    <link href="http://github.kainy.cn/blog/2016/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%87%91%E8%9E%8D%E4%BF%9D%E9%99%A9%E8%A1%8C%E4%B8%9A%E5%BA%94%E7%94%A8%E4%BA%A4%E6%B5%81/"/>
    <id>http://github.kainy.cn/blog/2016/11/小程序金融保险行业应用交流/</id>
    <published>2016-11-28T12:20:16.000Z</published>
    <updated>2017-03-14T09:37:28.774Z</updated>
    
    <content type="html"><![CDATA[<h3 id="二次渲染，暂不支持"><a href="#二次渲染，暂不支持" class="headerlink" title="二次渲染，暂不支持"></a>二次渲染，暂不支持</h3><ul><li>暂时用预设的 template 嵌套方案，后面几期做支持</li></ul><h3 id="crash-监控，版本回滚机制"><a href="#crash-监控，版本回滚机制" class="headerlink" title="crash 监控，版本回滚机制"></a>crash 监控，版本回滚机制</h3><ul><li>后续支持脚本错误，crash 信息，可能在 appjs 里捕获这些信息；</li><li>回滚暂时还是需要审核，应用发安卓市场还是 appstore 也都存在这个问题，质量把控，平台做再多的事情可能也不如开发者做得更好一些。</li></ul><a id="more"></a><h3 id="缓存在文件的数据防篡改"><a href="#缓存在文件的数据防篡改" class="headerlink" title="缓存在文件的数据防篡改"></a>缓存在文件的数据防篡改</h3><ul><li>底层机制：文件存放微信应用数据中，且每个小程序相互隔离；</li><li>保证了其他应用无法访问微信应用数据（除非root或越狱），小程序间无法互相篡改和访问</li></ul><h3 id="小程序的生命周期"><a href="#小程序的生命周期" class="headerlink" title="小程序的生命周期"></a>小程序的生命周期</h3><ul><li>小程序存活在微信的运行环境，</li><li>被销毁的情况一种情况是用户长时间没有操作，</li><li>还有一种是基于内存管理，如果用户开启更多的小程序，之前的小程序就可能被结束生命周期</li></ul><h3 id="c端用户进入小程序的方式"><a href="#c端用户进入小程序的方式" class="headerlink" title="c端用户进入小程序的方式"></a>c端用户进入小程序的方式</h3><ul><li>十二月初确定，会有一个固定的入口，会有一些分享的能力，后期慢慢会有发现的能力</li></ul><h3 id="（新金融研发）提交审核版本时候设置标签的限制。如何快速通过审核，如何更好的设置标签"><a href="#（新金融研发）提交审核版本时候设置标签的限制。如何快速通过审核，如何更好的设置标签" class="headerlink" title="（新金融研发）提交审核版本时候设置标签的限制。如何快速通过审核，如何更好的设置标签"></a>（新金融研发）提交审核版本时候设置标签的限制。如何快速通过审核，如何更好的设置标签</h3><ul><li>功能页面和标签、类目的设置一致，千万不要些和功能类目无关的标签（比如业务是外卖，就把点评、美团都堆砌上去）；</li><li>站在c端用户的角度去理解自己的产品，思考用户会使用哪些词来描述这个产品，标签的作用就是用户和小程序之间连接的桥梁</li></ul><h3 id="车险业务，能够提供什么样级别的用户分群的状况，比如说车险是不是能支持到微信用户是否车主？微信大概会拿出什么样的资源和大家一块做，这个可能会影响到业务方决定投入多少到这里面"><a href="#车险业务，能够提供什么样级别的用户分群的状况，比如说车险是不是能支持到微信用户是否车主？微信大概会拿出什么样的资源和大家一块做，这个可能会影响到业务方决定投入多少到这里面" class="headerlink" title="车险业务，能够提供什么样级别的用户分群的状况，比如说车险是不是能支持到微信用户是否车主？微信大概会拿出什么样的资源和大家一块做，这个可能会影响到业务方决定投入多少到这里面"></a>车险业务，能够提供什么样级别的用户分群的状况，比如说车险是不是能支持到微信用户是否车主？微信大概会拿出什么样的资源和大家一块做，这个可能会影响到业务方决定投入多少到这里面</h3><ul><li>数据这一块，用户画像会开放的比较慢，至多会提供一个群组，比如这一组人是什么标签，不会在用户没有授权的情况下透露用户的信息，这也是微信一只不敢做的事情；</li><li>在自己的阅历范围内，还没见过微信这么卖力的做一件事情，它会整合各个 BG（事业部） 资源，至少龙哥态度上是很支持这件事情的，会有每周一到两次的例会，具体来说：固定的入口，分享的能力，后面每件事情会比较谨慎，应该不会是爆发性的资源介入，而是一个过程，至于是怎么给，也只能说拭目以待。</li></ul><h3 id="教育类产品，每天推送模版消息让用户点击参与，希望将学习部分的功能迁移到小程序，但是小程序不支持主动推送"><a href="#教育类产品，每天推送模版消息让用户点击参与，希望将学习部分的功能迁移到小程序，但是小程序不支持主动推送" class="headerlink" title="教育类产品，每天推送模版消息让用户点击参与，希望将学习部分的功能迁移到小程序，但是小程序不支持主动推送"></a>教育类产品，每天推送模版消息让用户点击参与，希望将学习部分的功能迁移到小程序，但是小程序不支持主动推送</h3><ul><li>小程序本身对媒体类的服务不排斥，但是比较轻的媒体，还是建议做服务号，如果现有体系已经能够很好的满足。</li><li>小程序的目的是。公众号和小程序形态上是比较独立的，需要企业根据服务情况和偏好决定采用哪种，不会有强关联。</li></ul><h3 id="账号体系打通"><a href="#账号体系打通" class="headerlink" title="账号体系打通"></a>账号体系打通</h3><ul><li>unionid</li></ul><h3 id="实名信息，活体识别、视屏验证"><a href="#实名信息，活体识别、视屏验证" class="headerlink" title="实名信息，活体识别、视屏验证"></a>实名信息，活体识别、视屏验证</h3><ul><li>实名信息不会提供；可考虑使用视屏组件，截某几帧内容传到后台识别。如果现有能力不能够支持可以提需求。</li></ul><h3 id="保险营销很多是场景式嵌入，h5-嵌入到各个页面，但小程序是相互独立的"><a href="#保险营销很多是场景式嵌入，h5-嵌入到各个页面，但小程序是相互独立的" class="headerlink" title="保险营销很多是场景式嵌入，h5 嵌入到各个页面，但小程序是相互独立的"></a>保险营销很多是场景式嵌入，h5 嵌入到各个页面，但小程序是相互独立的</h3><ul><li>点对点合作，可能可以跳转限定数量的页面活小程序，已经提上日程，但要在小程序开放后的一段时间，预计是明年2、3月份</li></ul><h3 id="平安产险业务，1-车险每年快到期前三个月如何发提醒-2-模版消息发送-3-是否可以带参数-4-可否从公众号跳转小程序"><a href="#平安产险业务，1-车险每年快到期前三个月如何发提醒-2-模版消息发送-3-是否可以带参数-4-可否从公众号跳转小程序" class="headerlink" title="平安产险业务，1 车险每年快到期前三个月如何发提醒 2 模版消息发送 3 是否可以带参数 4 可否从公众号跳转小程序"></a>平安产险业务，1 车险每年快到期前三个月如何发提醒 2 模版消息发送 3 是否可以带参数 4 可否从公众号跳转小程序</h3><ul><li>前期不会放开公众号跳小程序；</li><li>独立的模版消息和公众号不太一样，不需要关注，只和是否页面互动有关；</li><li>一年后是否可发消息，暂无法预测；</li><li>参数可通过二维码传入</li></ul><h3 id="面向c端的入口什么时候开放；微信公众号和小程序之间的关系"><a href="#面向c端的入口什么时候开放；微信公众号和小程序之间的关系" class="headerlink" title="面向c端的入口什么时候开放；微信公众号和小程序之间的关系"></a>面向c端的入口什么时候开放；微信公众号和小程序之间的关系</h3><ul><li>个人觉得十二月份应该要落地，但还取决于客观因素，希望在发布是能囤积一些优秀案例；</li><li>关系和差别：<ul><li>龙哥之所以要做这件事，是因为觉得服务号没有把服务这件事做好，希望通过这套技术架构能够有个约束，真正做一些好的东西出来；</li><li>消息类，媒体这类消息类的东西还是适合在，页面形式的交互，还是适合在小程序上完成，后续会把以页面为主，消息为辅的功能在小程序这边做的更好些。</li></ul></li></ul><h3 id="绑定体验者的账号也要求绑卡，不方便测试；自定义”返回“按钮动作"><a href="#绑定体验者的账号也要求绑卡，不方便测试；自定义”返回“按钮动作" class="headerlink" title="绑定体验者的账号也要求绑卡，不方便测试；自定义”返回“按钮动作"></a>绑定体验者的账号也要求绑卡，不方便测试；自定义”返回“按钮动作</h3><ul><li>策略存在不合理的地方，后续考虑优化；</li><li>会考虑</li></ul><h3 id="（泰康在线）是否提供查询搜索关键字热词的接口，以便产品优化"><a href="#（泰康在线）是否提供查询搜索关键字热词的接口，以便产品优化" class="headerlink" title="（泰康在线）是否提供查询搜索关键字热词的接口，以便产品优化"></a>（泰康在线）是否提供查询搜索关键字热词的接口，以便产品优化</h3><ul><li>暂无计划，需要和搜索同事了解下。</li></ul><h3 id="提交审核时，走测试流程问题，保险产品购买受监管，重复购买会引起有关部门注意"><a href="#提交审核时，走测试流程问题，保险产品购买受监管，重复购买会引起有关部门注意" class="headerlink" title="提交审核时，走测试流程问题，保险产品购买受监管，重复购买会引起有关部门注意"></a>提交审核时，走测试流程问题，保险产品购买受监管，重复购买会引起有关部门注意</h3><ul><li>待研究</li></ul><h3 id="小程序模版消息发到哪里"><a href="#小程序模版消息发到哪里" class="headerlink" title="小程序模版消息发到哪里"></a>小程序模版消息发到哪里</h3><ul><li>对话界面“服务通知”，不是以账号维度发送</li></ul><h3 id="1M-尺寸的限制"><a href="#1M-尺寸的限制" class="headerlink" title="1M 尺寸的限制"></a>1M 尺寸的限制</h3><ul><li>几个方面：</li></ul><ol><li>小程序在移动网络中使用，希望做成轻量</li><li>目前看复杂的应用足够满足，图片资源用 cdn 纯文本 1M 是足够的</li></ol><h3 id="是否需要做设备适配"><a href="#是否需要做设备适配" class="headerlink" title="是否需要做设备适配"></a>是否需要做设备适配</h3><ul><li>不需要</li></ul><h3 id="是否会对小程序做推荐，比如提供分类排名"><a href="#是否会对小程序做推荐，比如提供分类排名" class="headerlink" title="是否会对小程序做推荐，比如提供分类排名"></a>是否会对小程序做推荐，比如提供分类排名</h3><ul><li>不会做推荐，分类排名还没有定</li></ul><h3 id="向日葵保险，是否支持多任务；是否可接入别的支付"><a href="#向日葵保险，是否支持多任务；是否可接入别的支付" class="headerlink" title="向日葵保险，是否支持多任务；是否可接入别的支付"></a>向日葵保险，是否支持多任务；是否可接入别的支付</h3><ul><li>支持多任务，可以切回聊天，小程序会在后台运行，按照堆栈顺序关闭使用频率最低的；</li><li>不会</li></ul><h3 id="搜索结果，是统一展示还是独立展示？"><a href="#搜索结果，是统一展示还是独立展示？" class="headerlink" title="搜索结果，是统一展示还是独立展示？"></a>搜索结果，是统一展示还是独立展示？</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;二次渲染，暂不支持&quot;&gt;&lt;a href=&quot;#二次渲染，暂不支持&quot; class=&quot;headerlink&quot; title=&quot;二次渲染，暂不支持&quot;&gt;&lt;/a&gt;二次渲染，暂不支持&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;暂时用预设的 template 嵌套方案，后面几期做支持&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;crash-监控，版本回滚机制&quot;&gt;&lt;a href=&quot;#crash-监控，版本回滚机制&quot; class=&quot;headerlink&quot; title=&quot;crash 监控，版本回滚机制&quot;&gt;&lt;/a&gt;crash 监控，版本回滚机制&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;后续支持脚本错误，crash 信息，可能在 appjs 里捕获这些信息；&lt;/li&gt;&lt;li&gt;回滚暂时还是需要审核，应用发安卓市场还是 appstore 也都存在这个问题，质量把控，平台做再多的事情可能也不如开发者做得更好一些。&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="小程序" scheme="http://github.kainy.cn/blog/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="金融" scheme="http://github.kainy.cn/blog/tags/%E9%87%91%E8%9E%8D/"/>
    
      <category term="笔记" scheme="http://github.kainy.cn/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>全栈工程师培训笔记</title>
    <link href="http://github.kainy.cn/blog/2016/11/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B0/"/>
    <id>http://github.kainy.cn/blog/2016/11/全栈工程师培训笔记/</id>
    <published>2016-11-20T22:06:46.000Z</published>
    <updated>2017-03-14T09:37:28.770Z</updated>
    
    <content type="html"><![CDATA[<p>有幸参加阮一峰老师为期两天的《全栈工程师培训》，获益良多，将训练营四讲内容分享如下：</p><h2 id="纲要"><a href="#纲要" class="headerlink" title="纲要"></a>纲要</h2><h3 id="第一讲：前端开发的历史和趋势"><a href="#第一讲：前端开发的历史和趋势" class="headerlink" title="第一讲：前端开发的历史和趋势"></a>第一讲：<a href="http://github.kainy.cn/jstraining/history.html">前端开发的历史和趋势</a></h3><ol><li>前端开发的历史演变</li><li>前端 MVC 框架的兴起</li><li>前后端分离</li><li>全栈工程师</li><li>前端开发的未来</li></ol><a id="more"></a><h3 id="第二讲：React-技术栈"><a href="#第二讲：React-技术栈" class="headerlink" title="第二讲：React 技术栈"></a>第二讲：<a href="http://github.kainy.cn/jstraining/react.html">React 技术栈</a></h3><ol><li>React 的基本用法</li><li>React 应用的架构</li></ol><h3 id="第三讲：Node-应用开发"><a href="#第三讲：Node-应用开发" class="headerlink" title="第三讲：Node 应用开发"></a>第三讲：<a href="http://github.kainy.cn/jstraining/node.html">Node 应用开发</a></h3><ol><li>Node 的基本用法</li><li>Restful API</li><li>Express 框架搭建 Web 应用</li></ol><h3 id="第四讲：前端工程简介"><a href="#第四讲：前端工程简介" class="headerlink" title="第四讲：前端工程简介"></a>第四讲：<a href="http://github.kainy.cn/jstraining/engineering.html">前端工程简介</a></h3><ol><li>持续集成</li><li>静态代码检查</li><li>单元测试</li><li>功能测试</li><li>持续集成服务 Travis CI</li></ol><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>就我个人而言，收获比较大的是第三讲和第四讲内容，因为实际开发工作中涉及服务端开发和测试、集成方面较少，阮老师的讲解还是让自己开了眼界。</p><p>周末就花了些时间，使用 CircleCI 实践了一把持续集成，结合 <a href="https://github.com/gnab/remark" target="_blank" rel="external">remarkjs</a> 实现将阮老师的培训讲义（MarkDown格式），自动转为网页屁屁踢(见上文中的链接)，这样在讲义不断完善的过程中，文中的 PPT 内容也能保持更新，下一步的计划是把团队博客也这么整整，完了小伙伴们直接提交 md 即可，编译和发布过程都将自动集成 ( •̀ ω •́ )y 。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢公司提供这么好的机会，能与技术大牛面对面学习交流。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有幸参加阮一峰老师为期两天的《全栈工程师培训》，获益良多，将训练营四讲内容分享如下：&lt;/p&gt;&lt;h2 id=&quot;纲要&quot;&gt;&lt;a href=&quot;#纲要&quot; class=&quot;headerlink&quot; title=&quot;纲要&quot;&gt;&lt;/a&gt;纲要&lt;/h2&gt;&lt;h3 id=&quot;第一讲：前端开发的历史和趋势&quot;&gt;&lt;a href=&quot;#第一讲：前端开发的历史和趋势&quot; class=&quot;headerlink&quot; title=&quot;第一讲：前端开发的历史和趋势&quot;&gt;&lt;/a&gt;第一讲：&lt;a href=&quot;http://github.kainy.cn/jstraining/history.html&quot;&gt;前端开发的历史和趋势&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;前端开发的历史演变&lt;/li&gt;&lt;li&gt;前端 MVC 框架的兴起&lt;/li&gt;&lt;li&gt;前后端分离&lt;/li&gt;&lt;li&gt;全栈工程师&lt;/li&gt;&lt;li&gt;前端开发的未来&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="测试" scheme="http://github.kainy.cn/blog/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="培训" scheme="http://github.kainy.cn/blog/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="框架" scheme="http://github.kainy.cn/blog/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="React" scheme="http://github.kainy.cn/blog/tags/React/"/>
    
      <category term="Node" scheme="http://github.kainy.cn/blog/tags/Node/"/>
    
      <category term="持续集成" scheme="http://github.kainy.cn/blog/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>Android WebView 前端开发调试</title>
    <link href="http://github.kainy.cn/blog/2016/03/Android_WebView_%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/"/>
    <id>http://github.kainy.cn/blog/2016/03/Android_WebView_前端开发调试/</id>
    <published>2016-03-24T09:44:07.000Z</published>
    <updated>2017-03-14T09:37:28.762Z</updated>
    
    <content type="html"><![CDATA[<p>在这次的参数RSA+AES加密需求(160310版本)中，由于涉及的接口众多，测试回归时需要在微信中到相关页面进行验证，工作量巨大，所以需要一个更高效率的<a href="https://slides.com/guotao/mobile-debugging" target="_blank" rel="external">移动端调测方式</a>。</p><p><a href="http://iffe.top/blog/%e5%b9%b3%e5%ae%89%e5%86%85%e7%bd%91%e6%a0%87%e8%a3%85%e6%9c%ba%e8%bf%9c%e7%a8%8b%e8%b0%83%e8%af%95%e5%ae%89%e5%8d%93webview%e7%9a%84%e6%96%b9%e6%b3%95/" target="_blank" rel="external">这篇文章</a>要里介绍了连接和抓包，其中出现远程调试安卓Webview的截图，很多同事尝试时在列表中只能看到chrome中打开的页面，通过 <a href="http://imweb.io/topic/551b9f7057c4fc5a3a6da6bd" target="_blank" rel="external">这篇文章</a>可以知道，原因是其他app可能没有开启webContentsDebuggingEnabled，chrome的安全策略限制了这些网址的展示，要突破这一限制，需要用到一款叫Xposed的APP 。</p><p>Xposed的原理是利用动态劫持，通过替换/system/bin/app_process程序控制zygote进程，使得app_process在启动过程中会加载XposedBridge.jar这个jar包，从而完成对Zygote进程及其创建的Dalvik虚拟机的劫持。</p><a id="more"></a><p>Xposed的安装在<a href="http://sspai.com/24538" target="_blank" rel="external">这篇文章</a>中已经介绍了很清楚，这里不赘述。下面截几个过程中的图</p><p><img src="http://kainy-migs.stor.sinaapp.com/original/2cd2eaef26bfbf8c5ac26cb8745b4d86.jpg" alt=""></p><p><img src="http://kainy-migs.stor.sinaapp.com/original/7e2e0bd85521038be8245e0dce8f01b8.jpg" alt=""></p><p><img src="http://kainy-migs.stor.sinaapp.com/original/b80060f2e73e59a3d2781e49676151d8.jpg" alt=""></p><p><img src="http://kainy-migs.stor.sinaapp.com/original/01e235a2bff16c3bf2dbf047634bda5b.png" alt=""></p><p>IMWeb团队袁飞翔这篇文章中介绍了开启QQ客户端debug模式的方法，参考其中代码：</p><p><img src="http://kainy-migs.stor.sinaapp.com/original/7fb84049ed58860fb96b897ca42b8a30.jpg" alt=""></p><p>把里面的 packageName 的判断去掉，重新编<a href="http://pan.baidu.com/s/1gecd5dD" title="提取密码：6abk" target="_blank" rel="external">译成apk</a> 就可以啦。也许有童鞋会说“我是前端开发怎么知道如何编译安卓app呢？”</p><p>身为前端，如果说web开发对于我们是陆地，客户端和服务端开发可能就是海洋和天空。离开了陆地我们无法生存，但这不应该成为我们放弃追求上天和入水的理由。</p><p>跳出舒适圈，才能走向更广阔的海洋和天空；正所谓技多不压身，了解其他领域的开发技能，有助于让我们从不同维度来思考工作中遇到的问题，虽然过程中可能需要投入额外的时间，但有的时候放适当放慢解决问题的速度，反而是对个人能力的提升——如果一开始看到那堆java代码感觉和平时写的js语法差异很大，看不懂就放弃了，可能就不会开始APP开发的第一步，更不会去思考如何编译打包的问题。而是直接采用QQ浏览器微信调试工具，这样既省时又省事的方式，但后续如果需调试微信之外的APP就卡壳了，一味追寻捷径也可能让人迷失，尤其对于开发新人。</p><p><em>需要指出的时，Xposed需要root权限（这个对开发应该不是啥问题吧），另外新版本的QQ和微信安卓客户端已经使用X5内核而不调系统Webview了，新版可以尝试在存储卡根目录下放置文件：debug.conf，或者使用老版本的客户端。</em></p><p>参考文章：</p><ol><li><a href="http://imweb.io/topic/551b9f7057c4fc5a3a6da6bd" target="_blank" rel="external">使用Xposed强制androidwebView开启debug模式</a></li><li><a href="http://sspai.com/24538" target="_blank" rel="external">安卓教程：Xposed 框架安装及使用</a></li><li><a href="http://3dobe.com/archives/113" target="_blank" rel="external">Xposed 入门与模块示例 - 电量伪装</a></li><li><a href="http://blog.qqbrowser.cc/kai-qi-wang-ye-diao-shi-jiao-cheng" target="_blank" rel="external">QQ浏览器开启网页调试教程</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这次的参数RSA+AES加密需求(160310版本)中，由于涉及的接口众多，测试回归时需要在微信中到相关页面进行验证，工作量巨大，所以需要一个更高效率的&lt;a href=&quot;https://slides.com/guotao/mobile-debugging&quot;&gt;移动端调测方式&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://iffe.top/blog/%e5%b9%b3%e5%ae%89%e5%86%85%e7%bd%91%e6%a0%87%e8%a3%85%e6%9c%ba%e8%bf%9c%e7%a8%8b%e8%b0%83%e8%af%95%e5%ae%89%e5%8d%93webview%e7%9a%84%e6%96%b9%e6%b3%95/&quot;&gt;这篇文章&lt;/a&gt;要里介绍了连接和抓包，其中出现远程调试安卓Webview的截图，很多同事尝试时在列表中只能看到chrome中打开的页面，通过 &lt;a href=&quot;http://imweb.io/topic/551b9f7057c4fc5a3a6da6bd&quot;&gt;这篇文章&lt;/a&gt;可以知道，原因是其他app可能没有开启webContentsDebuggingEnabled，chrome的安全策略限制了这些网址的展示，要突破这一限制，需要用到一款叫Xposed的APP 。&lt;/p&gt;&lt;p&gt;Xposed的原理是利用动态劫持，通过替换/system/bin/app_process程序控制zygote进程，使得app_process在启动过程中会加载XposedBridge.jar这个jar包，从而完成对Zygote进程及其创建的Dalvik虚拟机的劫持。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://github.kainy.cn/blog/categories/JavaScript/"/>
    
    
      <category term="调试" scheme="http://github.kainy.cn/blog/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="安卓" scheme="http://github.kainy.cn/blog/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>平安内网标装机远程调试安卓webview的方法</title>
    <link href="http://github.kainy.cn/blog/2016/01/%E5%B9%B3%E5%AE%89%E5%86%85%E7%BD%91%E6%A0%87%E8%A3%85%E6%9C%BA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%AE%89%E5%8D%93webview%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://github.kainy.cn/blog/2016/01/平安内网标装机远程调试安卓webview的方法/</id>
    <published>2016-01-02T22:06:46.000Z</published>
    <updated>2017-03-14T09:37:28.774Z</updated>
    
    <content type="html"><![CDATA[<p>由于安全策略限制，我们的开发机只能连入内网，且需要经过标装。</p><p>平安内部主要用到两张网，一张是办公开发用的PA_WLAN，另一张是移动设备接入的MA网，开发机与测试机由于不在同一网段，也就只能上演人鬼情未了了（用Mac开发的土豪例外）；</p><p>另一方面，标装过的机器木有管理员权限，无法通过共享wifi给手机来创建局域网环境，于是另一条路被宣告堵死。</p><p>以往的方法都不灵，只能另辟蹊径咯~ 最终希望寄托在连通二者的USB线。</p><a id="more"></a><p>于是问题转化为：<strong>如何通过USB线实现开发机与测试手机通信，让手机的流量通过USB线走开发机网络</strong>。</p><h3 id="先介绍解题思路"><a href="#先介绍解题思路" class="headerlink" title="先介绍解题思路"></a>先介绍解题思路</h3><ol><li>通过Chrome的远程调试工具连通手机和开发机，实现通信；</li><li>将手机流量通过代理指向开发机端口；</li><li>开发机监听端口，接收代理流量</li></ol><h3 id="具体操作步骤"><a href="#具体操作步骤" class="headerlink" title="具体操作步骤"></a>具体操作步骤</h3><p><strong>针对第一点</strong>，标装机需要安装ADB驱动（没有管理员权限的话到idesk搜索“Android”安装第一个搜索结果）</p><p>[caption id=”” align=”alignnone” width=”507”]<a href="http://kainy-migs.stor.sinaapp.com/original/7a2d487c57fa72a290ce41a1d65d42af.png" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/7a2d487c57fa72a290ce41a1d65d42af.png" alt=""></a>安装之后，勾选“Extras”下的“Google USB Driver package”，然后安装。[/caption]</p><p>安装之后的操作；</p><ol><li>开启当前Android设备的USB调试模式</li><li>开发机上安装Chrome浏览器（版本&gt;=32）</li><li>用USB线连接Android设备，在PC或MAC上的Chrome地址栏输入chrome://inspect 然后回车，或通过菜单图标→工具→检查设备，进入调试界面</li><li>勾选界面中的 Discover USB devices ，直到搜索到你的Android设备</li><li>在移动设备上弹出的是否允许远程调试上，选择“允许”</li><li>在下面的页面列表（将展示已在Android上的Chrome中打开的页面），点击对应的 inspect 开始调试</li><li>此时将在桌面版Chrome上弹出一个新的标签页，即为调试界面；<br>[caption id=”” align=”alignnone” width=”507”]<img src="http://kainy-migs.stor.sinaapp.com/original/0d090881e4633f59e460b353553aa8ca.jpg" alt=""> 连通后的效果是这样的~[/caption]</li></ol><p>这样以后，开发机的Chrome开发者工具就可以远程调试手机上的Chrome页面，但仅限于Chrome。接下来解决手机APP联网和流量抓包的问题。</p><p><strong>第二点的实现</strong>，得借助一款叫做“Transparent Proxy”的软件实现（需root权限），配置全局代理后，所有APP的流量就都指向Chrome的8888端口了；</p><p>需要注意的是：开发机与手机之间网络连接需要靠大小Chrome通奸来维持，所以即使不是调试手机版Chrome网页，也要保持手机Chrome后台运行状态（即 保持上图中的小绿点常亮）</p><p>[caption id=”” align=”alignnone” width=”267”]<a href="http://kainy-migs.stor.sinaapp.com/original/0d4e25d348f6c1ee7c929b2c9423bc18.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/0d4e25d348f6c1ee7c929b2c9423bc18.jpg" alt=""></a>需要如图配置三个地方[/caption]</p><p><strong>第三点</strong>，到目前为止，手机上的流量已经全部转向台式机的Chrome，接下来要做的，是将台式机Chrome接收到的流量转到我们熟悉的抓包工具——Fiddler上</p><p>[caption id=”” align=”alignnone” width=”274”]<img src="http://kainy-migs.stor.sinaapp.com/original/564feabd2260bb3208ef99206ae489f8.jpg" alt=""> Chrome的配置[/caption]</p><p>Fiddler的配置方法就不介绍了，不懂的百度一下，记得勾选“Allow remote computers to connect”哦。</p><p>[caption id=”” align=”alignnone” width=”508”]<a href="http://kainy-migs.stor.sinaapp.com/original/0c1d947659ef874b5dc848f600241926.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/0c1d947659ef874b5dc848f600241926.jpg" alt=""></a>财富宝APP的抓包，从User-Agent值可以看到系统和内核信息[/caption]</p><p>目前我们用较多的是console.re 和blog.qqbrowser.cc的方案；</p><ul><li>方案一本质是模拟console，依赖第三方服务器且存在网络延迟问题，功能也远不及Chrome开发者工具强大；</li><li>方案二需要安装鹅厂产品，不过相比带来的调试便利，这点推广还算良心。另外这个方案只能调试内核使用x5的APP，如微信、QQ空间等，且对APP版本有要求，如微信6.1以后才支持x5内核。<br>相比之下，咱们这套方法有三个优势：</li></ul><ol><li>不需要专门去安装个QQ浏览器用于调试（对于办公机内存吃紧如我的同学而言还是蛮赞的）；</li><li>不仅限于X5内核，可调试所有安卓应用中的webview；</li><li>手机使用开发机网络，无需MA账号，妈妈再也不用担心你的手机流量~</li></ol><h3 id="最终实现的效果"><a href="#最终实现的效果" class="headerlink" title="最终实现的效果"></a>最终实现的效果</h3><p>[caption id=”” align=”alignnone” width=”508”]<a href="http://kainy-migs.stor.sinaapp.com/original/2201bd030fe674a53f69ccb0862c8b64.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/2201bd030fe674a53f69ccb0862c8b64.jpg" alt=""></a>手机上打开页面的列表，点击“inspect”开始调试[/caption]</p><p>[caption id=”” align=”alignnone” width=”507”]<a href="http://kainy-migs.stor.sinaapp.com/original/9877ff22b5f74ef5a6450767fcdcf3bc.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/9877ff22b5f74ef5a6450767fcdcf3bc.jpg" alt=""></a>远程调试Chrome中打开的页面[/caption]</p><p>[caption id=”” align=”alignnone” width=”507”]<a href="http://kainy-migs.stor.sinaapp.com/original/5b3e164808cf6fd89973f38fd9bb101c.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/5b3e164808cf6fd89973f38fd9bb101c.jpg" alt=""></a>远程调试APP webview中的页面[/caption]</p><p>[caption id=”” align=”alignnone” width=”506”]<a href="http://kainy-migs.stor.sinaapp.com/original/cb87eec44182dd0370992051828be327.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/cb87eec44182dd0370992051828be327.jpg" alt=""></a>远程调试微信webview中的页面[/caption]</p><p>不将就于console.re模拟调试、不局限于仅满足特定场景的调试方案，要就用最直接的开发工具，做有追求的开发者（追求高效、追求简单、追求纯粹、追求XX… ）。</p><p>迂回妥协的方案如：设置全局开关 然后判断页面运行环境切换开关 虽然也是经验的结晶，但终究影响开发效率和体验。</p><p>面对外部条件和环境给开发带来的不便，我们还是要保持有开发者的初心，而不是以此为理由降低对开发过程和自己的要求，相信有光，于是光就在前方不远处。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于安全策略限制，我们的开发机只能连入内网，且需要经过标装。&lt;/p&gt;&lt;p&gt;平安内部主要用到两张网，一张是办公开发用的PA_WLAN，另一张是移动设备接入的MA网，开发机与测试机由于不在同一网段，也就只能上演人鬼情未了了（用Mac开发的土豪例外）；&lt;/p&gt;&lt;p&gt;另一方面，标装过的机器木有管理员权限，无法通过共享wifi给手机来创建局域网环境，于是另一条路被宣告堵死。&lt;/p&gt;&lt;p&gt;以往的方法都不灵，只能另辟蹊径咯~ 最终希望寄托在连通二者的USB线。&lt;/p&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="调试" scheme="http://github.kainy.cn/blog/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="android" scheme="http://github.kainy.cn/blog/tags/android/"/>
    
      <category term="webview" scheme="http://github.kainy.cn/blog/tags/webview/"/>
    
  </entry>
  
  <entry>
    <title>AC2015随记</title>
    <link href="http://github.kainy.cn/blog/2015/12/AC2015%E9%9A%8F%E8%AE%B0/"/>
    <id>http://github.kainy.cn/blog/2015/12/AC2015随记/</id>
    <published>2015-12-13T10:31:57.000Z</published>
    <updated>2017-03-14T09:37:28.762Z</updated>
    
    <content type="html"><![CDATA[<p>有幸收到<a href="http://ac.alloyteam.com" target="_blank" rel="external">AC2015</a>参会邀请，怀着崇高的敬意和期待，昨天下午来到腾大参加这次活动。AlloyTeam出品过很多有意思的作品，也有许多知名的开源项目，想必作为前端er都会有所耳闻，最初知道这个团队是通过CodeTank ，也为后面“墙来了”H5体感游戏创意与新技术的契合所深深折服。AC2015是合金团队成立以来开办的首届技术大会，往后计划每年一期，会上分享合金团队这一年里产生的作品和技术成果。</p><a id="more"></a><p><a href="http://kainy-migs.stor.sinaapp.com/original/afdcb5cba5fed8edc7209db47a206656.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/afdcb5cba5fed8edc7209db47a206656.jpg" alt=""></a></p><p>中午一点到，现场已经爆满，只能在前排席地听讲，恰好遇到几个相识的小伙伴。</p><p>开场揭幕的神秘项目是一款H5游戏<a href="http://ts.alloyteam.com" target="_blank" rel="external">坦克争霸</a>，效果炫酷。背后可以看出合金团队在游戏引擎方面的技术积淀。听闻这些项目都是利用业余时间完成，不得不感叹兴趣和成就感驱动的力量。</p><p><img src="http://kainy-migs.stor.sinaapp.com/original/d8b8162dbca76d11291d300244c7720b.jpg" alt=""><br>随后是前端showgirls表演，说实话，这是我头一回参加有showgirls表演的技术交流会，开发GG的最爱（偷笑）。两个轻松愉悦的暖场环节之后，大牛们悉数登场。</p><p>团队负责人于涛首先向大家介绍了AlloyTeam＋项目的由来、发展情况和计划。我个人印象中合金团队是鹅厂中的精英团队，成员更是前端圈精英中的精英。而现在，合金团队正在实践“创建一个无边界的开放组织”的设想，做优秀工程师与伟大梦想的连接器。</p><p>技术分享始于人称“老教授”的weberpan，以三种常见的移动交互为例，展开了项目中通过交互知识提升用户体验的实践和思考。作为一名合格的前端er，具备开发技术之外的交互设计能力还是很有必要的——做过前端项目的人都知道，很多时候，设计师只会给你一个设计图，而设计图可能无还原所有的交互细节，需要前端去拿捏。尤其对于目前平安这边的情况，有的时候我们甚至要直接和业务方打交道，如果完全没有的交互思想，实现出来的东西就可能和需求方预期相左，更谈不上体验优化了。</p><p>接下来郭高工带来了移动Web首屏优化实践的分享，Web性能怎么重视都不为过，糟糕的Web性能对用户和产品都是一种伤害。讲师从加载过程和运行时间两个方面介绍了自己对性能优化的理解和实践。</p><p>中间的lighting talk也是亮点频出，来自富途的工程师介绍了“逐帧动画的像素差优化”；爱奇艺的工程师介绍的通过算法树优化React虚拟DOM性能让偶不明觉历&#x1f633;；还有非常非常有爱的爱米，通过自己的行动让现场每一个人为之动容，虽未谈技术，却也让人受益良多——普遍认为程序员是个缺爱的群体，而培养对代码的爱、对用户的爱，是工程师成长之必修课程。</p><p>手机QQ Hybrid App性能优化之路，Cson介绍了解决移动端页面中 长列表滚动卡顿问题的渲染优化方案，五种演进方案的实现细节和优缺点对比让人耳目一新之外，更为其精益求精的工匠精神所折服。</p><p>最后，隔壁家老王介绍了“会帮你写业务逻辑”的框架 Abstract，大有一统前端开发生态大风范。。</p><p>几位讲师的分享有个共同点就是先铺开一个面，然后取其中一点进行深挖，从一些往往被忽略的细节中挖掘突破点，体现了腾讯人的精品意识，更折射出讲师深厚的技术功底和实战经验。以上谈都是自己主观感受，干货满满地会议内容请可移步<a href="http://ke.qq.com/course/103412#term_id=100108356" target="_blank" rel="external">腾讯课堂</a>，或关注<a href="http://ac.alloyteam.com" target="_blank" rel="external">活动主页</a>后续发布的资料。</p><p>iWeb峰会、阿里技术嘉年华、jsconf2015… 这一年里感受到深圳前端的分享气氛愈发活跃，无论所活动影响力、分享内容甚至互动提问质量都明显提升，也许正如Kinvix演讲中所述，前端生态正处在最好的时代，很庆幸自己身处这个时期并能参与其中。最后，祝“前端界的WWDC”越办越好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有幸收到&lt;a href=&quot;http://ac.alloyteam.com&quot;&gt;AC2015&lt;/a&gt;参会邀请，怀着崇高的敬意和期待，昨天下午来到腾大参加这次活动。AlloyTeam出品过很多有意思的作品，也有许多知名的开源项目，想必作为前端er都会有所耳闻，最初知道这个团队是通过CodeTank ，也为后面“墙来了”H5体感游戏创意与新技术的契合所深深折服。AC2015是合金团队成立以来开办的首届技术大会，往后计划每年一期，会上分享合金团队这一年里产生的作品和技术成果。&lt;/p&gt;
    
    </summary>
    
      <category term="互联网络" scheme="http://github.kainy.cn/blog/categories/%E4%BA%92%E8%81%94%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="前端" scheme="http://github.kainy.cn/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>质疑小米帐号体系安全性的</title>
    <link href="http://github.kainy.cn/blog/2015/10/%E8%B4%A8%E7%96%91%E5%B0%8F%E7%B1%B3%E5%B8%90%E5%8F%B7%E4%BD%93%E7%B3%BB%E5%AE%89%E5%85%A8%E6%80%A7%E7%9A%84/"/>
    <id>http://github.kainy.cn/blog/2015/10/质疑小米帐号体系安全性的/</id>
    <published>2015-10-05T07:15:18.000Z</published>
    <updated>2017-03-14T09:37:28.794Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间发现自己的小米帐号被盗，因为绑定过手机邮箱，本以为可以很方便地找回；却发现手机也被重新绑定了，邮箱被解绑，很显然是被恶意申诉了。随后提交的两次申诉都被驳回，无奈只好找客服反馈，还特意截了早期密保手机设置成功和异常登录提醒邮件的图。本以为胜券在握，上午接到的电话反馈才大吃一惊。</p><p>首先客服MM确认了帐号31385972目前的属主不是我的158*＊＊手机；原因是帐号被申诉通过，原有的绑定信息都被解除，而提交的两次申诉失败原因其实是因为客服在核对申诉信息前会联系目前绑定该帐号的手机确认，盗号者自然否认提出申诉了，于是申诉流程终止……</p><a id="more"></a><p><img src="http://kainy-migs.stor.sinaapp.com/original/78af5c2dda94722f37dd49eaeae56633.png" alt="亲爱的小米用户，您好！您的帐号31385972在2014-06-21 11:06:31在新设备上登录，请确认此次登录行为由您本人完成。若非本人行为，请立即登录account.xiaomi.com修改密码此邮件由系统自动发出,请勿直接回复。"></p><p><img src="http://kainy-migs.stor.sinaapp.com/original/df2441de7281ae689cf02453219539fc.png" alt="您申请将手机号158＊＊＊73设置为小米帐号31385972的密保手机，请点击这里 确认。验证成功后可使用手机号158＊＊＊73登录或找回密码。如果上面的链接无法点击，您可以复制下面的地址，并粘帖到浏览器的地址栏中访问。"></p><p>好吧，历史资料完全派不上用场了。那么盗号者又是如何申诉成功的呢，客服MM很认真负责的查了记录，盗号者提供的信息是登录过该帐号的设备MIME，这个其实好搞，密码有了自然可以登录，小米也还不至于low到仅凭这一项就通过申诉。关键点在审核材料之前的一步：提起申诉后联系原绑定手机，空号停机状态、或者本人确认过后才算数。虽然我自知用了近10年的老号从未停过，也更不可能同意把自己的帐号绑定到一个陌生手机，但这得怎么自证呢。客服MM说你当时同意过了那就是同意过了。<br>什么早期邮件截图，注册绑定手机号码在小米看来统统不算事儿。本想着帐号丢了就丢吧，反正除了通讯录也没啥可泄露的，再注册个，以后自己不用云服务就是了，百度一下才发现遇到相似问题的貌似不止是我一个。这位兄台比我还惨些，吐个槽都被舔净了 …</p><p><img src="http://kainy-migs.stor.sinaapp.com/original/ad949c1de56b31c1236929d61f4db04b.png" alt="[使用讨论] 小米，你麻痹， 441|发表于 昨天 19:35 |复制| |跳转 大学买的手机，现在换了一个手机号码，用着以前申请的云服务，竟然，登不上去了，，，，，然后，我申诉了，你麻痹的告诉老子申诉失败，真尼玛鬼火，老子自己的手机，自己的云服务，竟然申诉失败了，你倒是告诉我，为什么申诉失败！！！！！！"></p><p>[caption id=”” align=”aligncenter” width=”517”]<img src="http://kainy-migs.stor.sinaapp.com/original/ff2b97aae3cd38266aa9c8e1526822d4.png" alt="这才知道，原来小米论坛吐槽贴的生存周期是以分钟来计算的。。"> 评论亮了，现在才知道，原来小米论坛吐槽贴的生存周期是以分钟来计算的。。[/caption]</p><p>自己掌控生杀大权的同时，订立明显偏袒盗号者的策略，其目的不免让人质疑。是小米帐号真像KFMM说的那么有市场呢，还是帐号运营者不惜恶心用户来成全自己？</p><p>这件事给我的教训是慎重选用云服务，因为碰到帐号体系有明显问题的服务商，可能重要的资料如照片材料联系人信息也许明天就不属于你 或者不仅仅属于你了。</p><p>&nbsp;</p><p>update：160508</p><p>今天接到来自江西的电话，是另一个遇到类似情况的用户看到我论坛回帖打来的。不同的是她是手机被盗后，账号被人绑了其他手机号。</p><p>回去论坛看了下回帖<a href="http://www.miui.com/thread-3148700-1-1.html" target="_blank" rel="external">http://www.miui.com/thread-3148700-1-1.html</a> 发现后面有不少“米粉”反馈同样的问题，都在三月份，可能帖子沉了，还有类似情况没有发声</p><p>聊了挺久，听其描述和语气，和自己刚开始的感受一样。</p><p>窃以为以小米的产品能力，应该不至于留着个漏洞，还听任这个问题存在了这么久…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间发现自己的小米帐号被盗，因为绑定过手机邮箱，本以为可以很方便地找回；却发现手机也被重新绑定了，邮箱被解绑，很显然是被恶意申诉了。随后提交的两次申诉都被驳回，无奈只好找客服反馈，还特意截了早期密保手机设置成功和异常登录提醒邮件的图。本以为胜券在握，上午接到的电话反馈才大吃一惊。&lt;/p&gt;&lt;p&gt;首先客服MM确认了帐号31385972目前的属主不是我的158*＊＊手机；原因是帐号被申诉通过，原有的绑定信息都被解除，而提交的两次申诉失败原因其实是因为客服在核对申诉信息前会联系目前绑定该帐号的手机确认，盗号者自然否认提出申诉了，于是申诉流程终止……&lt;/p&gt;
    
    </summary>
    
      <category term="互联网络" scheme="http://github.kainy.cn/blog/categories/%E4%BA%92%E8%81%94%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>羊毛党识别</title>
    <link href="http://github.kainy.cn/blog/2015/06/%E7%BE%8A%E6%AF%9B%E5%85%9A%E8%AF%86%E5%88%AB/"/>
    <id>http://github.kainy.cn/blog/2015/06/羊毛党识别/</id>
    <published>2015-06-06T08:26:12.000Z</published>
    <updated>2017-03-14T09:37:28.790Z</updated>
    
    <content type="html"><![CDATA[<p>这几天和同事在邮件组里讨论用户识别的方案，把其中碰撞出的火花纪录如下：</p><p>IP不是一个好办法，单独的canvas也有些问题，我们可以考虑结合，另外，我们再调研一下看有没有更好的方法能解决我们的问题，请大家群策群力。</p><p>Canvas指纹可以用来验证用户，我看网上有人测试的成功率在90%以上，但是canvas指纹指向的是机器而不是用户本人。</p><p>所以我认为要想把羊毛党识别出来光靠Canvas指纹是不够的，要想识别用户必须先了解用户。</p><a id="more"></a><p>类似的征信系统比如国内的腾讯支付宝都有，它们都有如下的特点：收集用户手机号或者机器码、恶意IP地址，把这个当作征信数据库，在后台作匹配。另外可能在IDS、和防火墙上作了定制。</p><p>我看了一下google analytics的网络跟踪方法，主要动作有两个，分别与后台保持两个通讯接口visit和track：</p><p>同时后台要安排机器学习用户行为。也就是很多公司打出的生物识别、大数据分析之类的噱头。简单的说就是将量化的用户行为比喻成照片，然后让机器看着照片来模仿用户的行为。</p><p>量化用户行为的模型是依靠：状态、动作、状态与动作之间的关系来表现用户行为。一个用户登录财富宝、浏览理财产品、付款、退出、这些都是行为。同时又都是一种状态，他们之间的关系就可以量化。比如：登录到浏览产品之间停留了多少秒，中间是否切出去发了个微信朋友圈，用户触屏多少次，用户付款时输入密码的快慢等。客户端将状态和动作之间的关系量化后发给后台，抽象用户行为样本。有大量行为样本类似的就可以将其分类。所以最终确认一个用户是否是羊毛党而不是普通用户应该是靠一组独特的行为而不是一个ID号。</p><p><span class="s1">推荐几个页面跟踪技术比较成熟的项目：</span></p><ol><li><span class="s3">浏览器指纹 <span class="s5"><a href="http://valve.github.io/fingerprintjs2" target="_blank" rel="external">http://valve.github.io/fingerprintjs2</a> （<a href="http://www.cnblogs.com/xiezhengcai/p/4252008.html" target="_blank" rel="external">原理</a>）</span></span></li><li><span class="s3">行为跟踪 <a href="http://www.aloodo.org/" target="_blank" rel="external"><span class="s5">http://www.aloodo.org</span></a></span></li><li><span class="s3">字体检测 <a href="http://borowserspy.dk/" target="_blank" rel="external"><span class="s5">http://borowserspy.dk</span></a></span><br>以上，感谢陈老师和王老师贡献的经验之谈。</li></ol><p>个人感觉陈老师的分析非常深入，追求极致的精神值得学习。 所列举的做法有很高的参考价值，但实践中还需考虑时间纬度，毕竟冰冻三尺非一日之寒。一步一步来 ，如果20分的投入能带来80分的产出 ，个人觉得还是可以先拿来解决当下之急。把追求极致作为一个长期演进的过程。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天和同事在邮件组里讨论用户识别的方案，把其中碰撞出的火花纪录如下：&lt;/p&gt;&lt;p&gt;IP不是一个好办法，单独的canvas也有些问题，我们可以考虑结合，另外，我们再调研一下看有没有更好的方法能解决我们的问题，请大家群策群力。&lt;/p&gt;&lt;p&gt;Canvas指纹可以用来验证用户，我看网上有人测试的成功率在90%以上，但是canvas指纹指向的是机器而不是用户本人。&lt;/p&gt;&lt;p&gt;所以我认为要想把羊毛党识别出来光靠Canvas指纹是不够的，要想识别用户必须先了解用户。&lt;/p&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="识别" scheme="http://github.kainy.cn/blog/tags/%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>掌握这两招，让你变身K吧人气达人——论KM上的两个CSRF漏洞</title>
    <link href="http://github.kainy.cn/blog/2015/05/%E6%8E%8C%E6%8F%A1%E8%BF%99%E4%B8%A4%E6%8B%9B%EF%BC%8C%E8%AE%A9%E4%BD%A0%E5%8F%98%E8%BA%ABK%E5%90%A7%E4%BA%BA%E6%B0%94%E8%BE%BE%E4%BA%BA%E2%80%94%E2%80%94%E8%AE%BAKM%E4%B8%8A%E7%9A%84%E4%B8%A4%E4%B8%AACSRF%E6%BC%8F%E6%B4%9E/"/>
    <id>http://github.kainy.cn/blog/2015/05/掌握这两招，让你变身K吧人气达人——论KM上的两个CSRF漏洞/</id>
    <published>2015-05-17T12:06:03.000Z</published>
    <updated>2017-03-14T09:37:28.778Z</updated>
    
    <content type="html"><![CDATA[<p>从绿盟科技的《<a href="http://www.williamlong.info/archives/4227.html" target="_blank" rel="external">2014互联网金融安全报告</a>》中可以看到，XSS和CSRF漏洞依然是影响比较突出的两个安全问题。</p><p>在这里分享下之前发现的两个内网知识管理系统（KM）的问题，KM系统个人主页的<strong>访问记录</strong>和<strong>关注操作</strong>都接受GET请求，只需要构造请求就可以实施一次CSRF攻击。</p><p>先看看增加关注者的方法。通过<a href="http://kainy-migs.stor.sinaapp.com/original/4eee339d5c25adc8b4019dc9d0a62ac7.jpg" target="_blank" rel="external">网页代码</a>可以看到，在他人的个人主页上点击“添加关注”按钮时调用的是getJSON方法，且未验证请求来源，于是要欺骗系统就变得异常简单，只需要满足两个条件：</p><ol><li>构造请求到关注接口；</li><li>cookie中带有用户信息（用户已经登录）。<br><a id="more"></a>以下是代码实现：</li></ol><p><a href="https://gist.github.com/kainy/204cb479f7d4c3703392#file-kmfollow-js" target="_blank" rel="external">https://gist.github.com/kainy/204cb479f7d4c3703392#file-kmfollow-js</a></p><p>只要把这段代码挂到任意网页（无需同域），然后诱导已登录KM的用户访问就可以让他成为自己的关注者啦。同样的方式适用于K吧关注。</p><p>再来看看增加主页人气（访客量）的方法。这种方法实际并不是上文介绍的方法直接伪造用户操作请求，那样实施成本较高，效果不明显。为了提高投入产出比，这里利用用户的猎奇心里，主动访问其他用户的个人主页，这样我们的头像就能出现在被访问主页右下方的“最近来访”模块，这样达到两个效果：</p><ol><li>被访用户发现自己主页有陌生人来访记录，出于好奇可能会回访；</li><li>其他访问该主页的用户，可能通过这个入口访问到我们的主页。尤其当他发现几乎所有个人主页上都出现固定的头像，被吸引点击的可能性就会大大增加，下图截自我的K吧主页，两天内就有8个访问记录<br><img src="http://kainy-migs.stor.sinaapp.com/original/ee60687a4415abcb836172a8ff8a26f4.jpg" alt="于是通过来访时间就会发现，自己的访客都比较“新鲜”（“两个冰雪聪明的企鹅MM没耐住好奇，给哥贴了俩标签）.jpg"></li></ol><p>所以，我们要做的也很简单，就是制造大量访问记录。由于KM系统访客记录也是接收GET请求的，于是问题的难点就变成如何产生随机的用户id用来构造请求URL。<br>我们经常会在使用内部系统输入用户id时会发现一个自动补全的功能，里面其实就有个数字id与英文名的映射表，拿到这个就只差编码实现了：</p><p><a href="https://gist.github.com/kainy/204cb479f7d4c3703392#file-kmvisit-js" target="_blank" rel="external">https://gist.github.com/kainy/204cb479f7d4c3703392#file-kmvisit-js</a></p><p>复制脚本到浏览器控制台中运行：</p><p><img src="http://kainy-migs.stor.sinaapp.com/original/80e406028e2a6fd09c18640775168a97.jpg" alt="KM_visit.jpg"></p><p>哈，这里并没有用到什么高深的技术，娱乐性大于技术性，望安全大神们轻拍砖。另外虽然是内部系统，还是希望KM系统能做下针对性的改进。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从绿盟科技的《&lt;a href=&quot;http://www.williamlong.info/archives/4227.html&quot;&gt;2014互联网金融安全报告&lt;/a&gt;》中可以看到，XSS和CSRF漏洞依然是影响比较突出的两个安全问题。&lt;/p&gt;&lt;p&gt;在这里分享下之前发现的两个内网知识管理系统（KM）的问题，KM系统个人主页的&lt;strong&gt;访问记录&lt;/strong&gt;和&lt;strong&gt;关注操作&lt;/strong&gt;都接受GET请求，只需要构造请求就可以实施一次CSRF攻击。&lt;/p&gt;&lt;p&gt;先看看增加关注者的方法。通过&lt;a href=&quot;http://kainy-migs.stor.sinaapp.com/original/4eee339d5c25adc8b4019dc9d0a62ac7.jpg&quot;&gt;网页代码&lt;/a&gt;可以看到，在他人的个人主页上点击“添加关注”按钮时调用的是getJSON方法，且未验证请求来源，于是要欺骗系统就变得异常简单，只需要满足两个条件：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;构造请求到关注接口；&lt;/li&gt;&lt;li&gt;cookie中带有用户信息（用户已经登录）。&lt;br&gt;
    
    </summary>
    
      <category term="心路历程" scheme="http://github.kainy.cn/blog/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
    
      <category term="安全" scheme="http://github.kainy.cn/blog/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>茵特拉根温泉一日游</title>
    <link href="http://github.kainy.cn/blog/2015/05/%E8%8C%B5%E7%89%B9%E6%8B%89%E6%A0%B9%E6%B8%A9%E6%B3%89%E4%B8%80%E6%97%A5%E6%B8%B8/"/>
    <id>http://github.kainy.cn/blog/2015/05/茵特拉根温泉一日游/</id>
    <published>2015-05-03T15:57:17.000Z</published>
    <updated>2017-03-14T09:37:28.794Z</updated>
    
    <content type="html"><![CDATA[<p>跟了个华侨城一日游的团，始发点基本上齐，没有中途上客所以到得比较早，请容许我用一张全景图开场：</p><p><a href="http://ww4.sinaimg.cn/mw1024/4d6e3e3bjw1erpz95lf4hj25ie0zr1ky.jpg" target="_blank" rel="external"><img src="http://ww4.sinaimg.cn/mw1024/4d6e3e3bjw1erpz95lf4hj25ie0zr1ky.jpg" alt=""></a></p><p>拿着茶溪谷的门票发现游乐场已是人山人海，游乐项目几乎每个都要排队，那画面太美我不敢拍大家自行脑补。</p><a id="more"></a><p>上山时间充裕，到路过的“城堡”里玩了会儿，同行的一对父女，开启探寻“白雪公主”的现实版《爸爸去哪儿》。</p><p><a href="http://kainy-migs.stor.sinaapp.com/original/1083a0245b257710de5910852b3a2a02.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/1083a0245b257710de5910852b3a2a02.jpg" alt=""></a></p><p>湖里的乌龟都探出头来问声好（哥的气场是有多low啊）</p><p><a href="http://kainy-migs.stor.sinaapp.com/original/a4e28962cac2ca959170c178e744b503.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/a4e28962cac2ca959170c178e744b503.jpg" alt=""></a></p><p>茵特来根温泉的设施和环境还是很赞的，但汤池药池感觉和温泉之都——大虎纠还是略逊一筹，推荐有机会到福州贵安温泉感受下。</p><p><a href="http://kainy-migs.stor.sinaapp.com/original/937da2dbbd27bfa2fc470a0fbbc2eac3.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/937da2dbbd27bfa2fc470a0fbbc2eac3.jpg" alt=""></a></p><p>返程有俩人因为下山搭黑车，被放在另一个停车场延误了些，那哥们太牛气，直接打到旅行社说导游“丢下我们”自己走了…所以还是别怕队伍长而走“捷径”的好，毕竟大部分深圳人还是文明的，都按秩序来其实排队伍也没看起来那么费时。</p><p>回来路上导游说全车都一脸疲惫，只有我越玩越精神（小小地自恋一下）</p><p><a href="http://kainy-migs.stor.sinaapp.com/original/e3de6fddffe85be9449877df404ac141.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/e3de6fddffe85be9449877df404ac141.jpg" alt=""></a></p><p>最后把此行拍下的其他照片也放上：</p><p><a href="http://kainy-migs.stor.sinaapp.com/original/a1b6cf8b4c0a6b0ba650b1b4ba9f13d3.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/a1b6cf8b4c0a6b0ba650b1b4ba9f13d3.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/9f9cbc062dd9cc1382d0a32e61383c3c.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/9f9cbc062dd9cc1382d0a32e61383c3c.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/e3bdb591e1e0d7cdff80c6a889e63038.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/e3bdb591e1e0d7cdff80c6a889e63038.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/0b532450dd5f81d6ac9006758441b2c1.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/0b532450dd5f81d6ac9006758441b2c1.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/611a69f7cc5cf75ccff3128882800e0c.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/611a69f7cc5cf75ccff3128882800e0c.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/9320471348a9f84bdbb3eb91b20c139e.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/9320471348a9f84bdbb3eb91b20c139e.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/14f9b1ca87fda8b4be629a9435f851d0.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/14f9b1ca87fda8b4be629a9435f851d0.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/e74f6f444e092cba842a281467e59a88.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/e74f6f444e092cba842a281467e59a88.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/302b15599b1f519d2fb5c901320f16bf.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/302b15599b1f519d2fb5c901320f16bf.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/21606d6aef306b8e0e64ff6b4ab1c7f9.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/21606d6aef306b8e0e64ff6b4ab1c7f9.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/af5290ba93a40b21f2b4b60f8ea5995f.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/af5290ba93a40b21f2b4b60f8ea5995f.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/aa8119ab070ffea07a94b8eb6138bcf3.jpg" target="_blank" rel="external"><img src="i" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/3dfbe0bbbb2f75c17d0f8a99df011890.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/3dfbe0bbbb2f75c17d0f8a99df011890.jpg" alt=""></a></p><p><a href="http://kainy-migs.stor.sinaapp.com/original/b9f7db0db2b2a27f55a6b71b4b31bc22.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/b9f7db0db2b2a27f55a6b71b4b31bc22.jpg" alt=""></a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跟了个华侨城一日游的团，始发点基本上齐，没有中途上客所以到得比较早，请容许我用一张全景图开场：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://ww4.sinaimg.cn/mw1024/4d6e3e3bjw1erpz95lf4hj25ie0zr1ky.jpg&quot;&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/mw1024/4d6e3e3bjw1erpz95lf4hj25ie0zr1ky.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;拿着茶溪谷的门票发现游乐场已是人山人海，游乐项目几乎每个都要排队，那画面太美我不敢拍大家自行脑补。&lt;/p&gt;
    
    </summary>
    
      <category term="生活点滴" scheme="http://github.kainy.cn/blog/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="游玩" scheme="http://github.kainy.cn/blog/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>微信webview远程调试</title>
    <link href="http://github.kainy.cn/blog/2015/04/%E5%BE%AE%E4%BF%A1webview%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/"/>
    <id>http://github.kainy.cn/blog/2015/04/微信webview远程调试/</id>
    <published>2015-04-04T21:05:06.000Z</published>
    <updated>2017-03-14T09:37:28.778Z</updated>
    
    <content type="html"><![CDATA[<p>1月10日，微信公众平台对外开放了微信内网页开发工具包(微信JS-SDK)。在广大开发者和微信营销圈内产生了巨大反响。</p><p>JS-SDK在丰富了HTML5应用能力的同时，也带来了开发复杂度的提升。主要有以下几个方面：</p><ol><li>微信webview中的缓存、localStorage等特性与原生浏览器的差异</li><li>盲人摸象隔靴搔痒，无法给臭虫最直接的打击</li><li>市面上的各种调试工具增加额外的学习成本，不如直接使用已熟手的 开发者工具。<br>在此背景下，开发者们需要一种更加便利的方式来面对挑战，提升效率。</li></ol><a id="more"></a><p>我们都知道Chrome mobile和Chrome PC双剑合璧让开发者可以像在PC上调试网页一样，用Chrome PC的开发者工具来调试Chrome mobile里的页面（这么说有点绕，直接<a href="http://kainy-migs.stor.sinaapp.com/original/12dcb0445b860e30232e3e543caa6d14.png" title="remote-debug-overview.png" target="_blank" rel="external">看图</a>）。好是好，无奈这种方法只能调试Chrome mobile中打开的页面，要想调试应用内webview中打开的页面，需要在应用中配置<a href="https://developer.chrome.com/devtools/docs/remote-debugging#debugging-webviews" target="_blank" rel="external">setWebContentsDebuggingEnabled</a>。这也就意味着，按常规方法想要远程调试微信webview中的页面，除非微信提供特定版本的客户端安装包。</p><p>为了突破限制，才华横溢的鹅前(xian)辈(lie)们已经做了<a href="http://www.webryan.net/2013/04/talk-about-remote-debugging-on-mobile-phone/" title="关于移动终端上的Web前端调试方法探讨" target="_blank" rel="external">各种</a> <a href="http://www.webryan.net/2013/11/breakpoint-for-javascript-debugger-without-browser-supportted/" title="【breakpoint】不依赖浏览器控制台的JavaScript断点调试方法" target="_blank" rel="external">不同</a>的<a href="http://alloyteam.github.io/Rosin" title="Rosin A tool for web developers debug mobile page with fiddler" target="_blank" rel="external">尝试</a>，解决了不同场景下的开发痛点，但都难以达到使用桌面版Chrome中原生开发者工具远程调试移动版Chrome内页面的体验（资源全局搜索、命令行交互等）。</p><p>为了实现这个目标，本人进行了一些思考和实践，分享如下：</p><p>如<a href="http://www.quirksmode.org/blog/archives/2015/02/chrome_continue.html" target="_blank" rel="external">这篇文章</a>所述，虽然Android4.3 开始默认安装 Chrome 但只有Nexus系列和摩托罗拉的设备将其设置为默认浏览器。各大设备厂商如三星HTC小米等都推出了基于Chromium（甚至Android Webikt ）的派生浏览器（Chromia）并设为系统默认浏览器。受到<a href="http://km.oa.com/group/18061/articles/show/197412" title="[精华]微信内嵌网页的远程调试方法" target="_blank" rel="external">这篇文章</a>（内网）启发：既然系统安装了手机QQ浏览器，微信会自动选择使用手机QQ浏览器的内核。反向求解，如果非但不安装手机QQ浏览器，反而把系统默认的自带浏览器卸载了（嗯，要掌握此神技就得具备壮(hui)士(dao)断(zi)腕(gong)的勇气和魄力），然后安装最新的Chrome移动版，这样微信内打开网页调用webview时别无选择，是不是就该使用我们安装的Chrome了呢。所以首先要做的就是铲除这些经设备厂商们“改进”过的浏览器，使用刷机精灵“实用工具”tab下的“一键Root”和“卸载预装应用”就可以啦。注意，必须是安卓4.4或更新的系统。</p><ol><li>开启当前Android设备的USB调试（ <a href="http://kainy-migs.stor.sinaapp.com/original/f30b4e0ec197e60f77269bb1d2798194.jpg" title=" 勾选“网络ADB调试”" target="_blank" rel="external">示意图</a> ）</li><li>在PC或MAC上安装Chrome浏览器（版本&gt;=32）和对应的Android设备驱动（如果找不到，可以在这个 <a href="http://developer.android.com/tools/extras/oem-usb.html" title="OEM USB Drivers | Android Developers" target="_blank" rel="external">列表</a> 内尝试）</li><li>用USB线连接Android设备，在PC或MAC上的Chrome地址栏输入 <code>chrome://inspect</code> 然后回车，或通过菜单图标→工具→检查设备，进入调试界面</li><li>勾选界面中的 <code>Discover USB devices</code> ，直到搜索到你的Android设备（ <a href="http://kainy-migs.stor.sinaapp.com/original/e0bf1076e5ab45b37dd92bf0b1b41870.png" title=" 调试微信中的webview" target="_blank" rel="external">示意图</a> ）</li><li>在移动设备上弹出的是否允许远程调试上，选择“允许”</li><li>在下面的页面列表（将展示已在Android上的Chrome中打开的页面），点击对应的 <code>inspect</code> 开始调试</li><li>此时将在桌面版Chrome上弹出一个新的标签页，即为调试界面（ <a href="http://kainy-migs.stor.sinaapp.com/original/7c38ec5c063edd2d489cf1034c2faef7.jpg" title=" 调试微信中的webview" target="_blank" rel="external">示意图</a> ）；<br>&nbsp;</li></ol><p>如果不忍心看爱机菊花惨遭蹂躏，还可以试试用wifi连接 替代USB数据线进行远程调试 ，方法如下（其中斜体部分为手机ip和端口号，请根据实际情况修改）：</p><ol><li>确保手机和PC连入同一局域网，PC 能ping通手机ip；</li><li>勾选“开发者选项”中的“网络ADB调试”；</li><li>USB连接手机，命令行中输入“adb tcpip <span style="color:#0ff"><em>5555</em></span>”；</li><li>断开USB，命令行输入“adb connect <span style="color:#0ff"><em>172.16.0.2</em></span>”（ <a href="http://kainy-migs.stor.sinaapp.com/original/f4fb6ed9f3d9184b612f556305219267.jpg" title=" adb connect $ip.jpg" target="_blank" rel="external">示意图</a> ）；<br>[caption id=”” align=”alignnone” width=”476”]<a href="http://kainy-migs.stor.sinaapp.com/original/571a0a65aac333ffd2e2d257b7dcc4c7.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/571a0a65aac333ffd2e2d257b7dcc4c7.jpg" alt=""></a>通过wifi连接的效果也是一样一样嘀。[/caption]</li></ol><p>[caption id=”” align=”alignnone” width=”476”]<a href="http://kainy-migs.stor.sinaapp.com/original/8dc7b6d6cbede7e49c828f7a037e793c.jpg" target="_blank" rel="external"><img src="http://kainy-migs.stor.sinaapp.com/original/8dc7b6d6cbede7e49c828f7a037e793c.jpg" alt=""></a>手Q客户端内的webview也是一样可以调试。[/caption]</p><p>&nbsp;</p><p><span style="line-height:1.5">总结如下：</span></p><ol><li>如果是安卓4.4及以上版本的设备，使用本文介绍的方法体验最完整的远程调试功能，对于iOS和低版本安卓设备此方法就无能为力了；</li><li>如果常用断点调试，使用henryguo介绍的<a href="http://www.webryan.net/2013/11/breakpoint-for-javascript-debugger-without-browser-supportted" title="【breakpoint】不依赖浏览器控制台的JavaScript断点调试方法" target="_blank" rel="external">这种方法</a>最合适；</li><li>需要捕获脚本运行错误，console出数据的，可使用不同版本及平台通用的方法<a href="http://alloyteam.github.io/Rosin" title="Rosin A tool for web developers debug mobile page with fiddler" target="_blank" rel="external">Rosin</a>。<br>各种webview远程调试方法各有优缺点，还需要结合项目情况选择使用。比如在开发国际汇款过程中，由于是第一次接触微信服务应用开发，使用方法1就帮助我快速了解登陆态获取机制。</li></ol><p>注：以上操作仅在本人小米1s和中兴X9180上验证成功，加之自己a对安卓系统知之甚少，如理解有误还望指出，遇到任何问题都可以留言讨论。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1月10日，微信公众平台对外开放了微信内网页开发工具包(微信JS-SDK)。在广大开发者和微信营销圈内产生了巨大反响。&lt;/p&gt;&lt;p&gt;JS-SDK在丰富了HTML5应用能力的同时，也带来了开发复杂度的提升。主要有以下几个方面：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;微信webview中的缓存、localStorage等特性与原生浏览器的差异&lt;/li&gt;&lt;li&gt;盲人摸象隔靴搔痒，无法给臭虫最直接的打击&lt;/li&gt;&lt;li&gt;市面上的各种调试工具增加额外的学习成本，不如直接使用已熟手的 开发者工具。&lt;br&gt;在此背景下，开发者们需要一种更加便利的方式来面对挑战，提升效率。&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="调试" scheme="http://github.kainy.cn/blog/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="微信" scheme="http://github.kainy.cn/blog/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="webview" scheme="http://github.kainy.cn/blog/tags/webview/"/>
    
  </entry>
  
  <entry>
    <title>分分钟把你的网站装进微信中</title>
    <link href="http://github.kainy.cn/blog/2014/12/%E5%88%86%E5%88%86%E9%92%9F%E6%8A%8A%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99%E8%A3%85%E8%BF%9B%E5%BE%AE%E4%BF%A1%E4%B8%AD/"/>
    <id>http://github.kainy.cn/blog/2014/12/分分钟把你的网站装进微信中/</id>
    <published>2014-12-28T08:41:01.000Z</published>
    <updated>2017-03-14T09:37:28.770Z</updated>
    
    <content type="html"><![CDATA[<p>利用周末两天搭了个服务，通过这个服务能让微信公众号具备检索你网站信息供用户搜索的能力。具体而言，就是订阅者发送任意消息到你的公众号，就可以获得你网站上的相关内容。你要做的仅仅是到公众平台完成简单设置（如果你还没有公众号请到<a href="https://mp.weixin.qq.com" title="微信公众平台" target="_blank" rel="external">这里</a>注册），而无需对网站做任何改动，这个服务会替你完成网站内容的索引和检索工作（jekyll生成的纯静态网站尤其受用，Github pages用户还不快快搞起～）。</p><h3 id="设置方法："><a href="#设置方法：" class="headerlink" title="设置方法："></a>设置方法：</h3><a id="more"></a><p><img src="http://file.service.qq.com/user-files/uploads/201407/0db39728b21a2c4a36dfce4f98da5168.jpg" alt=""></p><p>登录微信公众平台后点击“开发者中心”，勾选同意协议点击“成为开发者”</p><p><img src="http://file.service.qq.com/user-files/uploads/201407/830cecd98265934e061c69696650cd98.jpg" alt=""></p><p>在“开发者中心”页点击“修改配置”，填入如下信息</p><ol><li>URL(服务器地址)：<a href="http://kainy.sinaapp.com/wechat-search/?site=" target="_blank" rel="external">http://kainy.sinaapp.com/wechat-search/?site=</a><span style="color:red"><em>这里填写你网站的域名</em></span></li><li>Token(令牌)：KainyCN</li><li>EncodingAESKey(消息加解密密钥)：jtriDLZV13xXwyec4S7owkainyb1thvzu8qGtd6xbrj</li><li>消息加解密方式：明文模式</li></ol><h3 id="请注意："><a href="#请注意：" class="headerlink" title="请注意："></a>请注意：</h3><ol><li>“URL(服务器地址)”中红色斜体标注部分需改为你的网站域名；</li><li>虽然使用这个服务理论上不需要你对网站做任何修改，但还是建议接入的网站能做下手机版适配，毕竟微信来的用户大都是通过手机浏览你的网页；</li><li>遇到发送大部分消息都提示“暂时找不到相关内容”的情况，可能是因为你网站的内容不够充足，或是我们的服务对你网站的索引还未完成，请设完后过几天再试试；</li></ol><h3 id="演示帐号："><a href="#演示帐号：" class="headerlink" title="演示帐号："></a>演示帐号：</h3><p><img src="http://17173-migs.stor.sinaapp.com/original/f1e8b62fd970eac651b992ed57ffaa0f.jpg" alt="微信公众号二维码"> <img src="http://kainy-migs.stor.sinaapp.com/original/49223a07e00d56e3dd1c0ab7fb5a5a4d.jpg" alt=""></p><p>使用中遇到任何问题请留言反馈，欢迎提供改进建议。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用周末两天搭了个服务，通过这个服务能让微信公众号具备检索你网站信息供用户搜索的能力。具体而言，就是订阅者发送任意消息到你的公众号，就可以获得你网站上的相关内容。你要做的仅仅是到公众平台完成简单设置（如果你还没有公众号请到&lt;a href=&quot;https://mp.weixin.qq.com&quot; title=&quot;微信公众平台&quot;&gt;这里&lt;/a&gt;注册），而无需对网站做任何改动，这个服务会替你完成网站内容的索引和检索工作（jekyll生成的纯静态网站尤其受用，Github pages用户还不快快搞起～）。&lt;/p&gt;&lt;h3 id=&quot;设置方法：&quot;&gt;&lt;a href=&quot;#设置方法：&quot; class=&quot;headerlink&quot; title=&quot;设置方法：&quot;&gt;&lt;/a&gt;设置方法：&lt;/h3&gt;
    
    </summary>
    
      <category term="建站❤编程" scheme="http://github.kainy.cn/blog/categories/%E5%BB%BA%E7%AB%99%E2%9D%A4%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="微信" scheme="http://github.kainy.cn/blog/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="服务" scheme="http://github.kainy.cn/blog/tags/%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>全民Git</title>
    <link href="http://github.kainy.cn/blog/2014/11/%E5%85%A8%E6%B0%91Git/"/>
    <id>http://github.kainy.cn/blog/2014/11/全民Git/</id>
    <published>2014-11-16T08:27:32.000Z</published>
    <updated>2017-03-14T09:37:28.770Z</updated>
    
    <content type="html"><![CDATA[<p>标题由来是轰动一时的微信游戏“全民打飞机”。<br>对Git的第一印象就是各种命令行（对比 git help -a 和 svn help的命令清单可知），这篇文章的目的就是希望能借助图形化的工具TortoiseGit和Gitlab，不需要太多了解实现的细节和原理就能够完成基本操作，满足日常开发的需要。就像全民飞机大战把游戏引入原先单纯的社交工具微信，为公司探索出新的盈利模式那样。</p><a id="more"></a><h4 id="为什么了解Git"><a href="#为什么了解Git" class="headerlink" title="为什么了解Git"></a>为什么了解Git</h4><p>Git是一款版本控制软件，想必大家多少有所了解。这些年来，越来越多的开源软件使用Git进行版本控制，Github毫无疑问已经是最具影响力的开源项目聚集地。所以为了紧随潮流，更好的参与到开源协作中，学习和借力海量优秀的开源代码；同时为了将我们的作品推向外部，进行对外的技术交流，扩大团队知名度，掌握Git技能对我们开发者尤其必要。</p><p>如果仅仅是因为流行而转投一个新工具，难免有盲从的嫌疑。就好像操盘手不会仅因为这只股票涨了就买入，而是分析背后的原因一样（本人最近开始学习港股，感兴趣的欢迎交流^_^）。个人认为Git广为接受背后的原因在于它使得开发者与开发者、代码与代码、开发者与代码间互联互通变得容易。在刚刚过去的APEC上习大大提出一路一带的设想，很多人把它比作中国版马歇尔计划，为“一带一路”沿线国基础设施建设、资源开发、产业合作等有关项目提供投融资支持。把国内的资金和过剩的产能转化为国际影响力。今天看到一篇文章站在另一个高度，作者认为一路一带的意义更在于使得中国成为连接欧洲和亚洲的大通道。由此也印证了连接节点的重要性。综上，学习Git的另一个原因在于它不仅仅是一个版本控制软件。</p><h4 id="Git的特点"><a href="#Git的特点" class="headerlink" title="Git的特点"></a>Git的特点</h4><p>和SVN相比，Git最显著的特点就是去中心化(分布式)：</p><blockquote><p>Git是没有中心服务器的，每个人机器上都是一个完整的库<br>理论上比集中式的单服务器系统更健壮，单服务器系统一旦服务器出现问题整个系统就不能运行了，分布式系统通常不会因为一两个节点而受到影响；</p></blockquote><p>近乎所有操作都是本地执行：“可以支持离线工作，本地提交（commit）可以稍后提交（push）到服务器上”</p><h4 id="Git适用场景"><a href="#Git适用场景" class="headerlink" title="Git适用场景"></a>Git适用场景</h4><p>个人理解，Git是以开发者为中心，每个人都能拉取一份项目代码，添加想要的特性或者修复Bug，完了别人选择是否拉取这个更新，甚至可以主动推送回原作者的库。而Subversion则是开发者“参与”到项目中去。所以Git比较适合代码的分享和交流，而Subversion则适合以项目为中心的团队协作，两者有互补的一面。<br>Git的特性使得它相比SVN等其他版本控制软件更适合加入社交元素，前面提到的Github就是编程和社交结合的案例。</p><p>&nbsp;</p><p>以上每一点可以单独作为一个课题来介绍，这里只根据个人的理解，谈谈让我印象最深刻的方面，不为了显得高大上而追求大而全。</p><p>之所以选择TortoiseGit来介绍，是因为它和我们团队目前工作中使用的TortoiseSVN使用习惯最为相近，学习成本低。</p><h4 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h4><p>好了，意识流完毕，接下来详细到每一个操作步骤的介绍git.oa.com的使用。TortoiseGit配合Gitlab，不用一个命令行完成主要操作。虽然可能不及命令行来的灵活，但相对直观也基本满足日常需要。</p><p><a href="http://github.kainy.cn/slides/git-on-the-way.html#/3" title="http://github.kainy.cn/slides/git-on-the-way.html#/3">http://github.kainy.cn/slides/git-on-the-way.html#/3</a></p><p>（链接到的演示文档，也是一个托管于Github上的<a href="http://www.tickethk.com/concert-ticket/1057" target="_blank" rel="external">项目</a>，基于reveal.js框架，通过Github Pages呈现）</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>打飞机这样一个大家玩烂了的游戏，引入微信好友的互动后，引发了一波打飞机狂潮，这就是联通的力量。Git让我们能够很方便的为感兴趣的项目创建分支，实验自己的新想法，然后推送回原作者，或者吸引有类似想法的人来完善这个想法。Git赋予源代码自由交流的便利性对项目的成长是十分有益的，也是真正意义上的开发者所能够受用的。</p><p>以上就是个人根据对Git的理解所作的总结，希望通过这些内容能让小伙伴们更好的认识Git并尝试使用它。</p><p>最后，这是我的Github主页：<a href="http://github.com/kainy" target="_blank" rel="external">http://github.com/kainy</a> 欢迎互fo，</p><p>还有平时练手的项目：<a href="http://github.kainy.cn/">http://github.kainy.cn/</a>，有时候挺庆幸，这么玩着玩着也能成为程序员。</p><h4 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h4><p><a href="http://www.zhihu.com/question/20093241" target="_blank" rel="external">知乎《如何理解 Git 的分布式？》</a><br><a href="http://blog.cnbluebox.com/blog/2014/04/15/gitlabde-shi-yong" target="_blank" rel="external">刘坤的技术博客 《Gitlab的使用》</a> 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;标题由来是轰动一时的微信游戏“全民打飞机”。&lt;br&gt;对Git的第一印象就是各种命令行（对比 git help -a 和 svn help的命令清单可知），这篇文章的目的就是希望能借助图形化的工具TortoiseGit和Gitlab，不需要太多了解实现的细节和原理就能够完成基本操作，满足日常开发的需要。就像全民飞机大战把游戏引入原先单纯的社交工具微信，为公司探索出新的盈利模式那样。&lt;/p&gt;
    
    </summary>
    
      <category term="系统❤软件" scheme="http://github.kainy.cn/blog/categories/%E7%B3%BB%E7%BB%9F%E2%9D%A4%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="git" scheme="http://github.kainy.cn/blog/tags/git/"/>
    
      <category term="TID前端研究会" scheme="http://github.kainy.cn/blog/tags/TID%E5%89%8D%E7%AB%AF%E7%A0%94%E7%A9%B6%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>2014中秋月</title>
    <link href="http://github.kainy.cn/blog/2014/09/2014%E4%B8%AD%E7%A7%8B%E6%9C%88/"/>
    <id>http://github.kainy.cn/blog/2014/09/2014中秋月/</id>
    <published>2014-09-07T15:14:54.000Z</published>
    <updated>2017-03-14T09:37:28.758Z</updated>
    
    <content type="html"><![CDATA[<p>事情是酱的：<br>中秋没回家，晚饭后在小区周围转了一圈找不到月亮的影子，扫兴的在微信群里嚷到：“说好的圆月呢，头一年在深圳过中秋啊喂！”</p><p><img src="http://17173-migs.stor.sinaapp.com/original/033baf65fb018b72311092c63a0aa2b6.jpg" alt=""></p><a id="more"></a><p>本以为与今年的月亮无缘，准备到D盘赏秋香了…</p><p>结果却噌噌噌，出乎意料嘀收获了一箩筐各地的满月：</p><p><img src="http://17173-migs.stor.sinaapp.com/original/634f0e3a7c7d0f4d43e74fa62a37ac39.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/84b4722099ba5686ddf01c40e1ced4ce.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/86e2482d443a65c370a9ba33f0833ccf.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/18804852c06577459064283fe74f52c6.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/f392c9cb79bc97efe9bac732938770b1.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/75417ba7794ad3e838e3767e05651528.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/db9ab3ffeae58f09a304d8f79677cb65.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/cbd762f19fe28d2afc9a764013ec10ba.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/4c9808bec11ed4d28772e5b8e23cf88b.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/7e7173c1bb03700e86437bc63dd05b9d.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/39d89cc6e8df51a5116caeeae6e3f54b.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/d79c1355dfed19a4f60e61fb82de1615.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/23a9f7fdf65318a7935ad3148c6e856f.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/c4008c051de669005656e13d2e5a0785.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/2dcc56da1d25ebc3707b3b85ae43c6b6.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/f5e48a4fdc0b4538fe4835d8405bea84.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/e49d6a03c94562fdead3ba1d73bc7e49.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/21d3c61e7a0a195f764e0dbba75b4318.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/71bbbc7f11e88d4526b9dd01ed5947e6.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/713efb2b498c50109dcf9855b71a023f.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/b0bb5548046880bb1928c1530579884a.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/caaf148a0872a695f8fdaf8a65070dea.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/5ec9db730b711c24eca4827844832f68.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/05ee113fa169cc8aae12c157efebaf0f.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/43017e796ac341256ae9007fc60d4c68.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/d9be50413cda77f3a129e9325934dec4.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/d815d80c3567a097d297b65f021bd0c0.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/c9bdbdb0423f5bb27b84569fe0db9cef.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/8248569e0baae97c83f3ad5fafe7de52.jpg" alt=""></p><p>PS：晚上八点半，深圳的月亮终于羞射的探出了小脑袋，于是偶毫不客气的一把揪住了它的小辫子，哈！哈！</p><p><img src="http://17173-migs.stor.sinaapp.com/original/e928b10e9b05ea294d97e498c6c1d6e5.jpg" alt=""></p><p>再次，感谢热心分享自己月亮的小伙伴们。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;事情是酱的：&lt;br&gt;中秋没回家，晚饭后在小区周围转了一圈找不到月亮的影子，扫兴的在微信群里嚷到：“说好的圆月呢，头一年在深圳过中秋啊喂！”&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://17173-migs.stor.sinaapp.com/original/033baf65fb018b72311092c63a0aa2b6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="图片记录" scheme="http://github.kainy.cn/blog/categories/%E5%9B%BE%E7%89%87%E8%AE%B0%E5%BD%95/"/>
    
      <category term="生活点滴" scheme="http://github.kainy.cn/blog/categories/%E5%9B%BE%E7%89%87%E8%AE%B0%E5%BD%95/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="中秋" scheme="http://github.kainy.cn/blog/tags/%E4%B8%AD%E7%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记——笛卡儿《谈谈方法》</title>
    <link href="http://github.kainy.cn/blog/2014/08/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E7%AC%9B%E5%8D%A1%E5%84%BF%E3%80%8A%E8%B0%88%E8%B0%88%E6%96%B9%E6%B3%95%E3%80%8B/"/>
    <id>http://github.kainy.cn/blog/2014/08/读书笔记——笛卡儿《谈谈方法》/</id>
    <published>2014-08-29T14:08:44.000Z</published>
    <updated>2017-03-14T09:37:28.794Z</updated>
    
    <content type="html"><![CDATA[<h4 id="全书分为六个部分："><a href="#全书分为六个部分：" class="headerlink" title="全书分为六个部分："></a>全书分为六个部分：</h4><p>第一部分是作者对于各门学科的看法；<br>第二部分，作者寻求的那种方法的几条主要规则（研究问题的方法分四个步骤）：</p><blockquote><ol><li>永远不接受任何我自己不清楚的真理，就是说要尽量避免鲁莽和偏见，只能是根据自己的判断非常清楚和确定，没有任何值得怀疑的地方的真理。就是说只要没有经过自己切身体会的问题，不管有什麽权威的结论，都可以怀疑。这就是著名的“怀疑一切”理论。例如亚里士多德曾下结论说，女人比男人少两颗牙齿。但事实并非如此；</li><li>可以将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地分开解决；</li><li>将这些小问题从简单到复杂排列，先从容易解决的问题着手；</li><li>将所有问题解决后，再综合起来检验，看是否完全，是否将问题彻底解决了。<br>第三部分，从这种方法里引导出来的行为准则；<br>第四部分，通过用前述种方法来证明神和灵魂的存在，来证明这种方法的可靠性。也就是他形而上学的基础。<br>第五部分是他研究过的一系列物理学问题，特别是对于心脏运动以及其他方面医学方面问题的解释，还有人们灵魂和禽兽灵魂的区别；<br>最后一部分，是作者认为一定要做哪些事情才能在自然研究方面比过去更进一步，以及是哪些理由促使他写书。</li></ol></blockquote><a id="more"></a><h4 id="评价（引用自维基百科）"><a href="#评价（引用自维基百科）" class="headerlink" title="评价（引用自维基百科）"></a>评价（引用自维基百科）</h4><blockquote><p>在1960年代以前，西方科学研究的方法，从机械到人体解剖的研究，基本是按照笛卡儿的《谈谈方法》进行的，对西方近代科学的飞速发展，起了相当大的促进作用。但也有其一定的缺陷，如人体功能，只是各部位机械的综合，而对其互相之间的作用则研究不透。直到阿波罗1号登月工程的出现，科学家才发现，有的复杂问题无法分解，必须以复杂的方法来对待，因此导致系统工程的出现，方法论的方法才第一次被综合性的方法所取代。系统工程的出现对许多大规模的西方传统科学起了相当大的促进作用，如环境科学，气象学，生物学，人工智能等等。</p></blockquote><h4 id="摘录："><a href="#摘录：" class="headerlink" title="摘录："></a>摘录：</h4><ol><li>要想知道他人的看法，一定要看他们的实际行动，而不能光听他们的话，这不仅是由于世风日下，有不少人不肯全说真心话，也是由于有不少人并不知道自己的真心是什么；因为相信一件事并不等于知道自己相信这件事，这是两种思想活动，常常分道扬镳。</li><li>除了我们自己的思想外，没有任何东西可以完全有我们做主。</li><li>争辩的时候人人都想取胜，尽量用貌似真实的理由吹嘘， 很少权衡双方的道理，那些长期充当律师的人并不因此后来就是更好的法官。</li><li>我愿意乘这个机会请求后人注意，凡是未经我亲自发表的东西，千万不要道听途说，以为是我说出来的。</li><li>藤萝是决不能爬得比自己依附的树更高的。<br>笛卡尔的质疑精神和制定规则的思路很值得学习。在实际工作中，可以根据前人的经验、团队规范制定解决问题的规则，在参与项目开发的过程中通过解决问题不断修正、沉淀，把解决N个独立问题的方法提炼为解决一类问题的方法。这就是现阶段我对方法论的看法欢迎交流。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;全书分为六个部分：&quot;&gt;&lt;a href=&quot;#全书分为六个部分：&quot; class=&quot;headerlink&quot; title=&quot;全书分为六个部分：&quot;&gt;&lt;/a&gt;全书分为六个部分：&lt;/h4&gt;&lt;p&gt;第一部分是作者对于各门学科的看法；&lt;br&gt;第二部分，作者寻求的那种方法的几条主要规则（研究问题的方法分四个步骤）：&lt;/p&gt;&lt;blockquote&gt;&lt;ol&gt;&lt;li&gt;永远不接受任何我自己不清楚的真理，就是说要尽量避免鲁莽和偏见，只能是根据自己的判断非常清楚和确定，没有任何值得怀疑的地方的真理。就是说只要没有经过自己切身体会的问题，不管有什麽权威的结论，都可以怀疑。这就是著名的“怀疑一切”理论。例如亚里士多德曾下结论说，女人比男人少两颗牙齿。但事实并非如此；&lt;/li&gt;&lt;li&gt;可以将要研究的复杂问题，尽量分解为多个比较简单的小问题，一个一个地分开解决；&lt;/li&gt;&lt;li&gt;将这些小问题从简单到复杂排列，先从容易解决的问题着手；&lt;/li&gt;&lt;li&gt;将所有问题解决后，再综合起来检验，看是否完全，是否将问题彻底解决了。&lt;br&gt;第三部分，从这种方法里引导出来的行为准则；&lt;br&gt;第四部分，通过用前述种方法来证明神和灵魂的存在，来证明这种方法的可靠性。也就是他形而上学的基础。&lt;br&gt;第五部分是他研究过的一系列物理学问题，特别是对于心脏运动以及其他方面医学方面问题的解释，还有人们灵魂和禽兽灵魂的区别；&lt;br&gt;最后一部分，是作者认为一定要做哪些事情才能在自然研究方面比过去更进一步，以及是哪些理由促使他写书。&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读后有感" scheme="http://github.kainy.cn/blog/categories/%E8%AF%BB%E5%90%8E%E6%9C%89%E6%84%9F/"/>
    
    
      <category term="方法论" scheme="http://github.kainy.cn/blog/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>CDG新力军训练营培训总结</title>
    <link href="http://github.kainy.cn/blog/2014/08/CDG%E6%96%B0%E5%8A%9B%E5%86%9B%E8%AE%AD%E7%BB%83%E8%90%A5%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/"/>
    <id>http://github.kainy.cn/blog/2014/08/CDG新力军训练营培训总结/</id>
    <published>2014-08-11T11:34:46.000Z</published>
    <updated>2017-03-14T09:37:28.762Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><p>[caption id=”” align=”alignnone” width=”643”]<a href="http://17173-migs.stor.sinaapp.com/original/99f389b0ae2f8bd6cee92a227f8f9496.png" target="_blank" rel="external"><img src="http://17173-migs.stor.sinaapp.com/original/99f389b0ae2f8bd6cee92a227f8f9496.png" alt="CDG新力军训练营培训课程表.png"></a>CDG新力军训练营培训课程表[/caption]</p><a id="more"></a><p>为期4天的培训中，BG各部门的代表介绍了自己所在部门或中心。这里从新融入者的角度谈谈自己的收获和BG对我们的期许。</p><p>首先Grace向大家介绍了BG架构和个人职业发展相关问题，中间谈到腾讯这样的互联网公司在应对快速变化环境的同时， 自身也在不断调整，期间难免有比如不久前ECC部门那样的大变动，造成很多原先在ECC实习的同学还没正式入职，自己的部门就不存在了，公司可以理解他们的感受，但希望这些童鞋能够客观理性的接受这个调整，公司发展好了，员工才能受益。</p><p>作为新人我所能感受到的是WXG成立后，前端开发组的不少同学都划归微信支付；另外一个就是”外聘员工”这种形式的取消，导致一些童鞋转为外包甚至离开公司。其实这些组织架构和政策调整也都是应对快速变化的外部环境。</p><p>接下来是开发和运维的负责人对各自中心的介绍，让我认识到除了前端开发外，整个研发团队的分工是怎样的。期间一位运维老师谈到部门间结算时说“我们所用到的一切都不是免费的”，希望我们开发中注重性能，减少网络流量和计算资源，提高节约意识。</p><p>手Q支付、理财通、微信钱包的产品也分别有负责人代表来做介绍。对于面向企业的产品，需要抓准客户主要诉求加上真心服务。而支付产品的成败，除了做好本身服务外，很关键的一点是需要有丰富的应用场景，譬如支付宝的成功很关键在于淘宝等交易平台带来的支付需求，财付通也在积极扩展理财通之外的普惠金融服务。由此，再结合风控课程的介绍，也就可以理解为什么理财通会有安全卡(资金出入必须经由同一张储蓄卡)的概念，而余额宝则无此限制了——用户存入余额宝的资金主要用途是支付，收益并非首要目的；而理财通专注理财功能，侧重安全和收益。</p><p>关于项目管理的技巧，印象尤其深刻的是关于如何提高执行力和时间管理的技巧。bowie关于“打造精品”的课程让我了解到尤其在移动互联网时代，用户面临更多的选择，切换一个应用的成本越来越低，如果不能做好体验，将很容易受到挑战甚至被竞争对手超越。</p><p>除了具体的产品和部门的介绍外，这次培训从战略到技巧、从术到道均有涉及覆盖面很广。通过这次培训，学习了研发流程和前人总结的方法，希望今后能在工作中实践这些方法，并总结形成适合自身业务的一套方法来。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;[caption id=”” align=”alignnone” width=”643”]&lt;a href=&quot;http://17173-migs.stor.sinaapp.com/original/99f389b0ae2f8bd6cee92a227f8f9496.png&quot;&gt;&lt;img src=&quot;http://17173-migs.stor.sinaapp.com/original/99f389b0ae2f8bd6cee92a227f8f9496.png&quot; alt=&quot;CDG新力军训练营培训课程表.png&quot;&gt;&lt;/a&gt;CDG新力军训练营培训课程表[/caption]&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://github.kainy.cn/blog/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="培训" scheme="http://github.kainy.cn/blog/tags/%E5%9F%B9%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>小小Q</title>
    <link href="http://github.kainy.cn/blog/2014/08/%E5%B0%8F%E5%B0%8FQ/"/>
    <id>http://github.kainy.cn/blog/2014/08/小小Q/</id>
    <published>2014-08-08T11:14:39.000Z</published>
    <updated>2017-03-14T09:37:28.774Z</updated>
    
    <content type="html"><![CDATA[<p>给侄女准备的小礼物，上图先</p><p><img src="http://17173-migs.stor.sinaapp.com/original/a4caa5164d5e0acb57a3afed5708ff05.jpg" alt=""></p><a id="more"></a><p><img src="http://17173-migs.stor.sinaapp.com/original/efb2e45d922405593616b3c5c91cf874.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/94aeb503487c381f8d10e5cf1a66c2ef.jpg" alt=""></p><p>&nbsp;</p><p><img src="http://17173-migs.stor.sinaapp.com/original/d7c7f2ef356f01704474a48302b16158.jpg" alt=""></p><p><img src="http://17173-migs.stor.sinaapp.com/original/82d4047a0bd465f5ff6e747f24c87716.jpg" alt=""></p><p>商品评价（京东）：</p><blockquote><p>比预期略微大一点点，不过也比家里的另一个宝宝故事机小很多，<br>附带的一个QQ围巾很漂亮，但只适合摆放时使用，因为套上围巾之后，围巾处有点滑，宝宝不容易抓牢。 必须一赞是胸口的呼吸灯做得很不错，但脚部的状态灯就不怎么样了，有点寨的感觉，<br>眼睛是蓝牙和播歌切换，这点很巧妙，但也有不好的地方，宝宝容易按到，<br>故事机模式，播放时和家另一台故事机很不一样，另一台故事机根目录有几个文件夹，对应切换播放目录也就几个，譬如根目录下是“儿歌”、“故事”“国学”，切换时就在这三个目录内切换；但这个小小Q，貌似把所有目录包括子目录都看作是平级的，切换时有几个目录就要切换几次，点很不方便<br>&nbsp;</p></blockquote><p>个人使用感受：</p><ol><li>音质很棒低音有力，内容还算丰富；</li><li>外观很Q，做工比较精细，有质感；</li><li><p>使用蓝牙连接，室内室外都可玩；<br>&nbsp;</p></li><li><p>在“聊聊”中，互动效果灯闪烁时有“哔哔哔”的杂音，闪一下“哔”一声；</p></li><li>部分表情（握手、呲牙笑）没有播放声音；</li><li>小小Q名字首次设置后没法修改；</li><li>绑定的家庭成员QQ号没法解绑；</li><li><p>小小Q发热倒不明显，app就算不操作后台运行，黑屏播放一段时间后手机还是能感受到温度；<br>建议：</p></li><li><p>操作体验和内容感觉还有比较大的提升空间；</p></li><li>模式切换键在眼睛上，宝宝容易按到。可以考虑放在凸起的嘴巴下。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给侄女准备的小礼物，上图先&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://17173-migs.stor.sinaapp.com/original/a4caa5164d5e0acb57a3afed5708ff05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活点滴" scheme="http://github.kainy.cn/blog/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="礼物" scheme="http://github.kainy.cn/blog/tags/%E7%A4%BC%E7%89%A9/"/>
    
  </entry>
  
</feed>
